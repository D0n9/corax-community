[
  {"kind":"command-injection","signature":"java.lang.Runtime: * load(String)","subtypes":false,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"command-injection","signature":"java.lang.Runtime: * loadLibrary(String)","subtypes":false,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"command-injection","signature":"java.lang.ProcessBuilder: * command(String[])","subtypes":false,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"command-injection","signature":"java.lang.ProcessBuilder: * directory(File)","subtypes":false,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"command-injection","signature":"java.lang.ProcessBuilder: * <init>(List)","subtypes":false,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"command-injection","signature":"java.lang.ProcessBuilder: * <init>(String[])","subtypes":false,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"command-injection","signature":"java.lang.Runtime: * exec(String,String[],File)","subtypes":true,"arg":"Argument[0,1,2]","provenance":"ai-manual","ext":""},
  {"kind":"command-injection","signature":"java.lang.Runtime: * exec(String)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"command-injection","signature":"java.lang.Runtime: * exec(String[],String[],File)","subtypes":true,"arg":"Argument[0,1,2]","provenance":"ai-manual","ext":""},
  {"kind":"command-injection","signature":"java.lang.Runtime: * exec(String[])","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"command-injection","signature":"java.lang.System: * load(String)","subtypes":false,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"command-injection","signature":"java.lang.System: * loadLibrary(String)","subtypes":false,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"command-injection","signature":"java.lang.ProcessBuilder: * command(List)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"command-injection","signature":"java.lang.Runtime: * exec(String,String[])","subtypes":true,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"command-injection","signature":"java.lang.Runtime: * exec(String[],String[])","subtypes":true,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"command-injection","signature":"<scala.sys.process.Process$: scala.sys.process.ProcessBuilder apply(java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"command-injection","signature":"<scala.sys.process.Process$: scala.sys.process.ProcessBuilder apply(scala.collection.Seq)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"command-injection","signature":"<scala.sys.process.Process$: scala.sys.process.ProcessBuilder apply(java.lang.String,scala.collection.Seq)>","subtypes":true,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"command-injection","signature":"<scala.sys.process.Process$: scala.sys.process.ProcessBuilder apply(java.lang.String,java.io.File,scala.collection.Seq)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"command-injection","signature":"<scala.sys.process.Process$: scala.sys.process.ProcessBuilder apply(java.lang.String,java.io.File,scala.collection.Seq)>","subtypes":true,"arg":"Argument[2]","provenance":"manual","ext":""},
  {"kind":"command-injection","signature":"<scala.sys.process.Process$: scala.sys.process.ProcessBuilder apply(scala.collection.Seq,java.io.File,scala.collection.Seq)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"command-injection","signature":"<scala.sys.process.Process$: scala.sys.process.ProcessBuilder apply(scala.collection.Seq,java.io.File,scala.collection.Seq)>","subtypes":true,"arg":"Argument[2]","provenance":"manual","ext":""},
  {"kind":"command-injection","signature":"<scala.sys.process.Process$: scala.sys.process.ProcessBuilder apply(java.lang.String,scala.Option,scala.collection.Seq)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"command-injection","signature":"<scala.sys.process.Process$: scala.sys.process.ProcessBuilder apply(java.lang.String,scala.Option,scala.collection.Seq)>","subtypes":true,"arg":"Argument[2]","provenance":"manual","ext":""},
  {"kind":"command-injection","signature":"<scala.sys.process.Process$: scala.sys.process.ProcessBuilder apply(scala.collection.Seq,scala.Option,scala.collection.Seq)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"command-injection","signature":"<scala.sys.process.Process$: scala.sys.process.ProcessBuilder apply(scala.collection.Seq,scala.Option,scala.collection.Seq)>","subtypes":true,"arg":"Argument[2]","provenance":"manual","ext":""},
  {"kind":"command-injection","signature":"<scala.sys.process.Process$: scala.sys.process.ProcessBuilder apply(java.lang.String,scala.Function0)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"command-injection","signature":"<scala.sys.process.Process$: scala.collection.Seq apply(scala.collection.Seq,scala.Function1)>","subtypes":true,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"command-injection","signature":"<scala.sys.process.package$: scala.sys.process.ProcessBuilder stringToProcess(java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"command-injection","signature":"<scala.sys.process.package$: scala.sys.process.ProcessBuilder stringSeqToProcess(scala.collection.Seq)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},


  {"kind":"sql-injection","signature":"android.content.ContentProvider: * delete(Uri,String,String[])","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.content.ContentProvider: * query(Uri,String[],String,String[],String)","subtypes":true,"arg":"Argument[2]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.content.ContentProvider: * query(Uri,String[],String,String[],String,CancellationSignal)","subtypes":true,"arg":"Argument[2]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.content.ContentProvider: * update(Uri,ContentValues,String,String[])","subtypes":true,"arg":"Argument[2]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.content.ContentResolver: * delete(Uri,String,String[])","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.content.ContentResolver: * query(Uri,String[],String,String[],String)","subtypes":true,"arg":"Argument[2]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.content.ContentResolver: * query(Uri,String[],String,String[],String,CancellationSignal)","subtypes":true,"arg":"Argument[2]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.content.ContentResolver: * update(Uri,ContentValues,String,String[])","subtypes":true,"arg":"Argument[2]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.DatabaseUtils: * blobFileDescriptorForQuery(SQLiteDatabase,String,String[])","subtypes":false,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.DatabaseUtils: * createDbFromSqlStatements(Context,String,int,String)","subtypes":false,"arg":"Argument[3]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.DatabaseUtils: * longForQuery(SQLiteDatabase,String,String[])","subtypes":false,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.DatabaseUtils: * queryNumEntries(SQLiteDatabase,String)","subtypes":false,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.DatabaseUtils: * queryNumEntries(SQLiteDatabase,String,String)","subtypes":false,"arg":"Argument[1..2]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.DatabaseUtils: * queryNumEntries(SQLiteDatabase,String,String,String[])","subtypes":false,"arg":"Argument[1..2]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.DatabaseUtils: * stringForQuery(SQLiteDatabase,String,String[])","subtypes":false,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.sqlite.SQLiteDatabase: * compileStatement(String)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.sqlite.SQLiteDatabase: * delete(String,String,String[])","subtypes":false,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.sqlite.SQLiteDatabase: * execPerConnectionSQL(String,Object[])","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.sqlite.SQLiteDatabase: * execSQL(String)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.sqlite.SQLiteDatabase: * execSQL(String,Object[])","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.sqlite.SQLiteDatabase: * query(String,String[],String,String[],String,String,String)","subtypes":false,"arg":"Argument[0..2]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.sqlite.SQLiteDatabase: * query(String,String[],String,String[],String,String,String)","subtypes":false,"arg":"Argument[4..6]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.sqlite.SQLiteDatabase: * query(String,String[],String,String[],String,String,String,String)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.sqlite.SQLiteDatabase: * query(String,String[],String,String[],String,String,String,String)","subtypes":false,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.sqlite.SQLiteDatabase: * query(String,String[],String,String[],String,String,String,String)","subtypes":false,"arg":"Argument[2]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.sqlite.SQLiteDatabase: * query(String,String[],String,String[],String,String,String,String)","subtypes":false,"arg":"Argument[4..7]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.sqlite.SQLiteDatabase: * query(boolean,String,String[],String,String[],String,String,String,String)","subtypes":false,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.sqlite.SQLiteDatabase: * query(boolean,String,String[],String,String[],String,String,String,String)","subtypes":false,"arg":"Argument[2]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.sqlite.SQLiteDatabase: * query(boolean,String,String[],String,String[],String,String,String,String)","subtypes":false,"arg":"Argument[3]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.sqlite.SQLiteDatabase: * query(boolean,String,String[],String,String[],String,String,String,String)","subtypes":false,"arg":"Argument[5..8]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.sqlite.SQLiteDatabase: * query(boolean,String,String[],String,String[],String,String,String,String,CancellationSignal)","subtypes":false,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.sqlite.SQLiteDatabase: * query(boolean,String,String[],String,String[],String,String,String,String,CancellationSignal)","subtypes":false,"arg":"Argument[2]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.sqlite.SQLiteDatabase: * query(boolean,String,String[],String,String[],String,String,String,String,CancellationSignal)","subtypes":false,"arg":"Argument[3]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.sqlite.SQLiteDatabase: * query(boolean,String,String[],String,String[],String,String,String,String,CancellationSignal)","subtypes":false,"arg":"Argument[5..8]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.sqlite.SQLiteDatabase: * queryWithFactory(CursorFactory,boolean,String,String[],String,String[],String,String,String,String)","subtypes":false,"arg":"Argument[2]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.sqlite.SQLiteDatabase: * queryWithFactory(CursorFactory,boolean,String,String[],String,String[],String,String,String,String)","subtypes":false,"arg":"Argument[3]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.sqlite.SQLiteDatabase: * queryWithFactory(CursorFactory,boolean,String,String[],String,String[],String,String,String,String)","subtypes":false,"arg":"Argument[4]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.sqlite.SQLiteDatabase: * queryWithFactory(CursorFactory,boolean,String,String[],String,String[],String,String,String,String)","subtypes":false,"arg":"Argument[6..9]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.sqlite.SQLiteDatabase: * queryWithFactory(CursorFactory,boolean,String,String[],String,String[],String,String,String,String,CancellationSignal)","subtypes":false,"arg":"Argument[2]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.sqlite.SQLiteDatabase: * queryWithFactory(CursorFactory,boolean,String,String[],String,String[],String,String,String,String,CancellationSignal)","subtypes":false,"arg":"Argument[3]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.sqlite.SQLiteDatabase: * queryWithFactory(CursorFactory,boolean,String,String[],String,String[],String,String,String,String,CancellationSignal)","subtypes":false,"arg":"Argument[4]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.sqlite.SQLiteDatabase: * queryWithFactory(CursorFactory,boolean,String,String[],String,String[],String,String,String,String,CancellationSignal)","subtypes":false,"arg":"Argument[6..9]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.sqlite.SQLiteDatabase: * rawQuery(String,String[])","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.sqlite.SQLiteDatabase: * rawQuery(String,String[],CancellationSignal)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.sqlite.SQLiteDatabase: * rawQueryWithFactory(CursorFactory,String,String[],String)","subtypes":false,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.sqlite.SQLiteDatabase: * rawQueryWithFactory(CursorFactory,String,String[],String,CancellationSignal)","subtypes":false,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.sqlite.SQLiteDatabase: * update(String,ContentValues,String,String[])","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.sqlite.SQLiteDatabase: * update(String,ContentValues,String,String[])","subtypes":false,"arg":"Argument[2]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.sqlite.SQLiteDatabase: * updateWithOnConflict(String,ContentValues,String,String[],int)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.sqlite.SQLiteDatabase: * updateWithOnConflict(String,ContentValues,String,String[],int)","subtypes":false,"arg":"Argument[2]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.sqlite.SQLiteQueryBuilder: * delete(SQLiteDatabase,String,String[])","subtypes":true,"arg":"Argument[this]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.sqlite.SQLiteQueryBuilder: * delete(SQLiteDatabase,String,String[])","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.sqlite.SQLiteQueryBuilder: * insert(SQLiteDatabase,ContentValues)","subtypes":true,"arg":"Argument[this]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.sqlite.SQLiteQueryBuilder: * query(SQLiteDatabase,String[],String,String[],String,String,String)","subtypes":true,"arg":"Argument[this]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.sqlite.SQLiteQueryBuilder: * query(SQLiteDatabase,String[],String,String[],String,String,String)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.sqlite.SQLiteQueryBuilder: * query(SQLiteDatabase,String[],String,String[],String,String,String)","subtypes":true,"arg":"Argument[2]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.sqlite.SQLiteQueryBuilder: * query(SQLiteDatabase,String[],String,String[],String,String,String)","subtypes":true,"arg":"Argument[4..6]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.sqlite.SQLiteQueryBuilder: * query(SQLiteDatabase,String[],String,String[],String,String,String,String)","subtypes":true,"arg":"Argument[this]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.sqlite.SQLiteQueryBuilder: * query(SQLiteDatabase,String[],String,String[],String,String,String,String)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.sqlite.SQLiteQueryBuilder: * query(SQLiteDatabase,String[],String,String[],String,String,String,String)","subtypes":true,"arg":"Argument[2]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.sqlite.SQLiteQueryBuilder: * query(SQLiteDatabase,String[],String,String[],String,String,String,String)","subtypes":true,"arg":"Argument[4..7]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.sqlite.SQLiteQueryBuilder: * query(SQLiteDatabase,String[],String,String[],String,String,String,String,CancellationSignal)","subtypes":true,"arg":"Argument[this]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.sqlite.SQLiteQueryBuilder: * query(SQLiteDatabase,String[],String,String[],String,String,String,String,CancellationSignal)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.sqlite.SQLiteQueryBuilder: * query(SQLiteDatabase,String[],String,String[],String,String,String,String,CancellationSignal)","subtypes":true,"arg":"Argument[2]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.sqlite.SQLiteQueryBuilder: * query(SQLiteDatabase,String[],String,String[],String,String,String,String,CancellationSignal)","subtypes":true,"arg":"Argument[4..7]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.sqlite.SQLiteQueryBuilder: * update(SQLiteDatabase,ContentValues,String,String[])","subtypes":true,"arg":"Argument[this]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"android.database.sqlite.SQLiteQueryBuilder: * update(SQLiteDatabase,ContentValues,String,String[])","subtypes":true,"arg":"Argument[2]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"java.sql.Connection: * prepareCall(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"java.sql.Connection: * prepareStatement(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"java.sql.DatabaseMetaData: * getColumns(String,String,String,String)","subtypes":true,"arg":"Argument[2]","provenance":"ai-manual","ext":""},
  {"kind":"sql-injection","signature":"java.sql.DatabaseMetaData: * getPrimaryKeys(String,String,String)","subtypes":true,"arg":"Argument[2]","provenance":"ai-manual","ext":""},
  {"kind":"sql-injection","signature":"java.sql.Statement: * addBatch(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"java.sql.Statement: * execute(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"java.sql.Statement: * executeLargeUpdate(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"java.sql.Statement: * executeQuery(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"java.sql.Statement: * executeUpdate(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"org.apache.hadoop.hive.metastore.api.DefaultConstraintsRequest: * <init>(String,String,String)","subtypes":true,"arg":"Argument[1]","provenance":"ai-manual","ext":""},
  {"kind":"sql-injection","signature":"org.apache.hadoop.hive.metastore.ObjectStore: * updatePartitionColumnStatistics(ColumnStatistics,List,String,long)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"sql-injection","signature":"org.apache.hadoop.hive.metastore.ObjectStore: * updatePartitionColumnStatistics(ColumnStatistics,List)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"sql-injection","signature":"org.apache.hive.hcatalog.templeton.HcatDelegator: * addOneColumn(String,String,String,ColumnDesc)","subtypes":true,"arg":"Argument[3]","provenance":"ai-manual","ext":""},
  {"kind":"sql-injection","signature":"org.apache.ibatis.jdbc.SqlRunner: * delete(String,Object[])","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"org.apache.ibatis.jdbc.SqlRunner: * insert(String,Object[])","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"org.apache.ibatis.jdbc.SqlRunner: * run(String)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"org.apache.ibatis.jdbc.SqlRunner: * selectAll(String,Object[])","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"org.apache.ibatis.jdbc.SqlRunner: * selectOne(String,Object[])","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"org.apache.ibatis.jdbc.SqlRunner: * update(String,Object[])","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"org.hibernate.Session: * createQuery(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"org.hibernate.Session: * createSQLQuery(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"org.hibernate.SharedSessionContract: * createQuery(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"org.hibernate.SharedSessionContract: * createSQLQuery(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"org.hibernate.query.QueryProducer: * createNativeQuery(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"org.hibernate.query.QueryProducer: * createQuery(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"org.hibernate.query.QueryProducer: * createSQLQuery(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"org.springframework.jdbc.core.JdbcTemplate: * batchUpdate(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"org.springframework.jdbc.core.JdbcTemplate: * batchUpdate(String[])","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"org.springframework.jdbc.core.JdbcTemplate: * execute(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"org.springframework.jdbc.core.JdbcTemplate: * query(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"org.springframework.jdbc.core.JdbcTemplate: * queryForList(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"org.springframework.jdbc.core.JdbcTemplate: * queryForMap(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"org.springframework.jdbc.core.JdbcTemplate: * queryForObject(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"org.springframework.jdbc.core.JdbcTemplate: * queryForRowSet(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"org.springframework.jdbc.core.JdbcTemplate: * queryForStream(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"org.springframework.jdbc.core.JdbcTemplate: * update(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations: * batchUpdate(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations: * execute(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations: * query(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations: * queryForList(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations: * queryForMap(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations: * queryForObject(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations: * queryForRowSet(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations: * queryForStream(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations: * update(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"org.springframework.jdbc.object.BatchSqlUpdate: * <init>(**)","subtypes":false,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"org.springframework.jdbc.object.MappingSqlQuery: * <init>(**)","subtypes":false,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"org.springframework.jdbc.object.MappingSqlQueryWithParameters: * <init>(**)","subtypes":false,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"org.springframework.jdbc.object.RdbmsOperation: * setSql(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"org.springframework.jdbc.object.SqlCall: * <init>(**)","subtypes":false,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"org.springframework.jdbc.object.SqlFunction: * <init>(**)","subtypes":false,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"org.springframework.jdbc.object.SqlQuery: * <init>(**)","subtypes":false,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"org.springframework.jdbc.object.SqlUpdate: * <init>(**)","subtypes":false,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"org.springframework.jdbc.object.UpdatableSqlQuery: * <init>(**)","subtypes":false,"arg":"Argument[1]","provenance":"manual","ext":""},

  "example-xss",
  {"kind":"xss-injection","signature":"javax.servlet.http.HttpServletResponse: * addCookie(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"xss-injection","signature":"javax.servlet.http.HttpServletResponseWrapper: * addCookie(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},

  "supplement",
  {"kind":"sql-injection","signature":"<java.sql.PreparedStatement: java.sql.ResultSet executeQuery(java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"<java.sql.PreparedStatement: boolean execute(java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"<java.sql.PreparedStatement: boolean execute(java.lang.String,int)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"<java.sql.PreparedStatement: boolean execute(java.lang.String,int[])>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"<java.sql.PreparedStatement: boolean execute(java.lang.String,java.lang.String[])>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"<java.sql.PreparedStatement: int executeUpdate(java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"<java.sql.PreparedStatement: int executeUpdate(java.lang.String,int)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"<java.sql.PreparedStatement: int executeUpdate(java.lang.String,int[])>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"<java.sql.PreparedStatement: int executeUpdate(java.lang.String,java.lang.String[])>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"<java.sql.PreparedStatement: long executeLargeUpdate(java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"<java.sql.PreparedStatement: long executeLargeUpdate(java.lang.String,int)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"<java.sql.PreparedStatement: long executeLargeUpdate(java.lang.String,int[])>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"<java.sql.PreparedStatement: long executeLargeUpdate(java.lang.String,java.lang.String[])>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"<java.sql.PreparedStatement: void addBatch(java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"org.hibernate.QueryProducer: * createNativeQuery(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"org.hibernate.QueryProducer: * createQuery(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"org.hibernate.QueryProducer: * createSQLQuery(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"<org.hibernate.criterion.Restrictions: org.hibernate.criterion.Criterion sqlRestriction(java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"<org.hibernate.criterion.Restrictions: org.hibernate.criterion.Criterion sqlRestriction(java.lang.String,java.lang.Object,org.hibernate.type.Type)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection","signature":"<org.hibernate.criterion.Restrictions: org.hibernate.criterion.Criterion sqlRestriction(java.lang.String,java.lang.Object[],org.hibernate.type.Type[])>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-aws","signature":"<com.amazonaws.services.simpledb.model.SelectRequest: void <init>(java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-aws","signature":"<com.amazonaws.services.simpledb.model.SelectRequest: void <init>(java.lang.String,java.lang.Boolean)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-aws","signature":"<com.amazonaws.services.simpledb.model.SelectRequest: com.amazonaws.services.simpledb.model.SelectRequest withSelectExpression(java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-hibernate","signature":"<org.hibernate.criterion.Restrictions: org.hibernate.criterion.Criterion sqlRestriction(java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-hibernate","signature":"<org.hibernate.criterion.Restrictions: org.hibernate.criterion.Criterion sqlRestriction(java.lang.String,java.lang.Object,org.hibernate.type.Type)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-hibernate","signature":"<org.hibernate.criterion.Restrictions: org.hibernate.criterion.Criterion sqlRestriction(java.lang.String,java.lang.Object[],org.hibernate.type.Type[])>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-hibernate","signature":"org.hibernate.QueryProducer: * createNativeQuery(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-hibernate","signature":"org.hibernate.QueryProducer: * createQuery(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-hibernate","signature":"org.hibernate.QueryProducer: * createSQLQuery(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-android","signature":"<play.twirl.api.Html$: play.twirl.api.Html apply(java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-android","signature":"<android.database.sqlite.SQLiteDatabase: android.database.Cursor queryWithFactory(android.database.sqlite.SQLiteDatabase$CursorFactory,boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>","subtypes":true,"arg":"Argument[6,7,8,9]","provenance":"manual","ext":""},
  {"kind":"sql-injection-android","signature":"<android.database.sqlite.SQLiteDatabase: android.database.Cursor queryWithFactory(android.database.sqlite.SQLiteDatabase$CursorFactory,boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>","subtypes":true,"arg":"Argument[4]","provenance":"manual","ext":""},
  {"kind":"sql-injection-android","signature":"<android.database.sqlite.SQLiteDatabase: android.database.Cursor queryWithFactory(android.database.sqlite.SQLiteDatabase$CursorFactory,boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>","subtypes":true,"arg":"Argument[2]","provenance":"manual","ext":""},
  {"kind":"sql-injection-android","signature":"<android.database.sqlite.SQLiteDatabase: android.database.Cursor queryWithFactory(android.database.sqlite.SQLiteDatabase$CursorFactory,boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.CancellationSignal)>","subtypes":true,"arg":"Argument[6,7,8,9]","provenance":"manual","ext":""},
  {"kind":"sql-injection-android","signature":"<android.database.sqlite.SQLiteDatabase: android.database.Cursor queryWithFactory(android.database.sqlite.SQLiteDatabase$CursorFactory,boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.CancellationSignal)>","subtypes":true,"arg":"Argument[4]","provenance":"manual","ext":""},
  {"kind":"sql-injection-android","signature":"<android.database.sqlite.SQLiteDatabase: android.database.Cursor queryWithFactory(android.database.sqlite.SQLiteDatabase$CursorFactory,boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.CancellationSignal)>","subtypes":true,"arg":"Argument[2]","provenance":"manual","ext":""},
  {"kind":"sql-injection-android","signature":"<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQueryWithFactory(android.database.sqlite.SQLiteDatabase$CursorFactory,java.lang.String,java.lang.String[],java.lang.String)>","subtypes":true,"arg":"Argument[3]","provenance":"manual","ext":""},
  {"kind":"sql-injection-android","signature":"<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQueryWithFactory(android.database.sqlite.SQLiteDatabase$CursorFactory,java.lang.String,java.lang.String[],java.lang.String)>","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"sql-injection-android","signature":"<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQueryWithFactory(android.database.sqlite.SQLiteDatabase$CursorFactory,java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>","subtypes":true,"arg":"Argument[3]","provenance":"manual","ext":""},
  {"kind":"sql-injection-android","signature":"<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQueryWithFactory(android.database.sqlite.SQLiteDatabase$CursorFactory,java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"sql-injection-android","signature":"android.database.sqlite.SQLiteDatabase: * rawQueryWithFactory(CursorFactory,String,String[],String)","subtypes":false,"arg":"Argument[3]","provenance":"manual","ext":""},
  {"kind":"sql-injection-android","signature":"android.database.sqlite.SQLiteDatabase: * rawQueryWithFactory(CursorFactory,String,String[],String,CancellationSignal)","subtypes":false,"arg":"Argument[3]","provenance":"manual","ext":""},
  {"kind":"sql-injection-jdo","signature":"<javax.jdo.PersistenceManager: javax.jdo.Query newQuery(java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-jdo","signature":"<javax.jdo.PersistenceManager: javax.jdo.Query newQuery(java.lang.String,java.lang.Object)>","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"sql-injection-jdo","signature":"<javax.jdo.PersistenceManager: javax.jdo.Query newQuery(java.lang.Class,java.util.Collection,java.lang.String)>","subtypes":true,"arg":"Argument[2]","provenance":"manual","ext":""},
  {"kind":"sql-injection-jdo","signature":"<javax.jdo.PersistenceManager: javax.jdo.Query newQuery(java.lang.Class,java.lang.String)>","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"sql-injection-jdo","signature":"<javax.jdo.PersistenceManager: javax.jdo.Query newQuery(javax.jdo.Extent,java.lang.String)>","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"sql-injection-jdo","signature":"<javax.jdo.Query: void setFilter(java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-jdo","signature":"<javax.jdo.Query: void setGrouping(java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-jpa","signature":"<javax.persistence.EntityManager: javax.persistence.Query createQuery(java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-jpa","signature":"<javax.persistence.EntityManager: javax.persistence.TypedQuery createQuery(java.lang.String,java.lang.Class)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-jpa","signature":"<javax.persistence.EntityManager: javax.persistence.Query createNativeQuery(java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-jpa","signature":"<javax.persistence.EntityManager: javax.persistence.Query createNativeQuery(java.lang.String,java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-jpa","signature":"<javax.persistence.EntityManager: javax.persistence.Query createNativeQuery(java.lang.String,java.lang.Class)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-scala-anorm","signature":"<anorm.SimpleSql: boolean execute(java.sql.Connection)>","subtypes":true,"arg":"Argument[-1]","provenance":"manual","ext":""},
  {"kind":"sql-injection-scala-anorm","signature":"<anorm.SimpleSql: int executeUpdate(java.sql.Connection)>","subtypes":true,"arg":"Argument[-1]","provenance":"manual","ext":""},
  {"kind":"sql-injection-scala-anorm","signature":"<anorm.SimpleSql: anorm.SqlQueryResult executeQuery(java.sql.Connection)>","subtypes":true,"arg":"Argument[-1]","provenance":"manual","ext":""},
  {"kind":"sql-injection-scala-anorm","signature":"<anorm.SimpleSql: java.lang.Object executeInsert(anorm.ResultSetParser,java.sql.Connection)>","subtypes":true,"arg":"Argument[-1]","provenance":"manual","ext":""},
  {"kind":"sql-injection-scala-anorm","signature":"<anorm.SimpleSql: java.lang.Object as(anorm.ResultSetParser,java.sql.Connection)>","subtypes":true,"arg":"Argument[-1]","provenance":"manual","ext":""},
  {"kind":"sql-injection-scala-anorm","signature":"<anorm.BatchSql$: anorm.BatchSql apply(java.lang.String,scala.collection.Seq)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-scala-anorm","signature":"<anorm.BatchSql$: anorm.BatchSql apply(java.lang.String,scala.collection.Seq,scala.collection.Seq)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-scala-slick","signature":"<slick.jdbc.SQLActionBuilder: void <init>(scala.collection.Seq,slick.jdbc.SetParameter)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.PreparedStatementCreatorFactory: void <init>(java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.PreparedStatementCreatorFactory: void <init>(java.lang.String,int[])>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.PreparedStatementCreatorFactory: void <init>(java.lang.String,java.util.List)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.PreparedStatementCreatorFactory: org.springframework.jdbc.core.PreparedStatementCreator newPreparedStatementCreator(java.lang.String,java.lang.Object[])>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: int[] batchUpdate(java.lang.String[])>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: int[] batchUpdate(java.lang.String,org.springframework.jdbc.core.BatchPreparedStatementSetter)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: int[][] batchUpdate(java.lang.String,java.util.Collection,int,org.springframework.jdbc.core.ParameterizedPreparedStatementSetter)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: int[] batchUpdate(java.lang.String,java.util.List)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: int[] batchUpdate(java.lang.String,java.util.List,int[])>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: void execute(java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: java.lang.Object execute(java.lang.String,org.springframework.jdbc.core.PreparedStatementCallback)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: java.lang.Object execute(java.lang.String,org.springframework.jdbc.core.CallableStatementCallback)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: java.lang.Object query(java.lang.String,org.springframework.jdbc.core.ResultSetExtractor)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: java.lang.Object query(java.lang.String,org.springframework.jdbc.core.ResultSetExtractor,java.lang.Object[])>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: void query(java.lang.String,org.springframework.jdbc.core.RowCallbackHandler)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: void query(java.lang.String,org.springframework.jdbc.core.RowCallbackHandler,java.lang.Object[])>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: java.util.List query(java.lang.String,org.springframework.jdbc.core.RowMapper)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: java.util.List query(java.lang.String,org.springframework.jdbc.core.RowMapper,java.lang.Object[])>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: java.lang.Object query(java.lang.String,org.springframework.jdbc.core.PreparedStatementSetter,org.springframework.jdbc.core.ResultSetExtractor)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: void query(java.lang.String,org.springframework.jdbc.core.PreparedStatementSetter,org.springframework.jdbc.core.RowCallbackHandler)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: java.util.List query(java.lang.String,org.springframework.jdbc.core.PreparedStatementSetter,org.springframework.jdbc.core.RowMapper)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: java.util.List query(java.lang.String,java.lang.Object[],org.springframework.jdbc.core.RowMapper)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: void query(java.lang.String,java.lang.Object[],org.springframework.jdbc.core.RowCallbackHandler)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: java.lang.Object query(java.lang.String,java.lang.Object[],org.springframework.jdbc.core.ResultSetExtractor)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: java.lang.Object query(java.lang.String,java.lang.Object[],int[],org.springframework.jdbc.core.ResultSetExtractor)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: java.util.List query(java.lang.String,java.lang.Object[],int[],org.springframework.jdbc.core.RowMapper)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: void query(java.lang.String,java.lang.Object[],int[],org.springframework.jdbc.core.RowCallbackHandler)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: java.util.List queryForList(java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: java.util.List queryForList(java.lang.String,java.lang.Class)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: java.util.List queryForList(java.lang.String,java.lang.Class,java.lang.Object[])>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: java.util.List queryForList(java.lang.String,java.lang.Object[],java.lang.Class)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: java.util.List queryForList(java.lang.String,java.lang.Object[],int[])>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: java.util.List queryForList(java.lang.String,java.lang.Object[],int[],java.lang.Class)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: java.util.List queryForList(java.lang.String,java.lang.Object[])>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: java.util.Map queryForMap(java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: java.util.Map queryForMap(java.lang.String,java.lang.Object[])>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: java.util.Map queryForMap(java.lang.String,java.lang.Object[],int[])>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: java.lang.Object queryForObject(java.lang.String,org.springframework.jdbc.core.RowMapper)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: java.lang.Object queryForObject(java.lang.String,org.springframework.jdbc.core.RowMapper,java.lang.Object[])>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: java.lang.Object queryForObject(java.lang.String,java.lang.Class)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: java.lang.Object queryForObject(java.lang.String,java.lang.Class,java.lang.Object[])>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: java.lang.Object queryForObject(java.lang.String,java.lang.Object[],java.lang.Class)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: java.lang.Object queryForObject(java.lang.String,java.lang.Object[],int[],java.lang.Class)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: java.lang.Object queryForObject(java.lang.String,java.lang.Object[],int[],org.springframework.jdbc.core.RowMapper)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: java.lang.Object queryForObject(java.lang.String,java.lang.Object[],org.springframework.jdbc.core.RowMapper)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: org.springframework.jdbc.support.rowset.SqlRowSet queryForRowSet(java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: org.springframework.jdbc.support.rowset.SqlRowSet queryForRowSet(java.lang.String,java.lang.Object[])>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: org.springframework.jdbc.support.rowset.SqlRowSet queryForRowSet(java.lang.String,java.lang.Object[],int[])>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: int queryForInt(java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: int queryForInt(java.lang.String,java.lang.Object[])>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: int queryForInt(java.lang.String,java.lang.Object[],int[])>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: long queryForLong(java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: long queryForLong(java.lang.String,java.lang.Object[])>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: long queryForLong(java.lang.String,java.lang.Object[],int[])>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: int update(java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: int update(java.lang.String,java.lang.Object[])>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: int update(java.lang.String,java.lang.Object[],int[])>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcOperations: int update(java.lang.String,org.springframework.jdbc.core.PreparedStatementSetter)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcTemplate: int queryForInt(java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcTemplate: int queryForInt(java.lang.String,java.lang.Object[])>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcTemplate: int queryForInt(java.lang.String,java.lang.Object[],int[])>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcTemplate: long queryForLong(java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcTemplate: long queryForLong(java.lang.String,java.lang.Object[])>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"<org.springframework.jdbc.core.JdbcTemplate: long queryForLong(java.lang.String,java.lang.Object[],int[])>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"org.springframework.jdbc.object.MappingSqlQuery: * BatchSqlUpdate(**)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"sql-injection-spring","signature":"org.springframework.jdbc.object.MappingSqlQueryWithParameters: * BatchSqlUpdate(**)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"sql-injection-turbine","signature":"<org.apache.turbine.om.peer.BasePeer: java.util.Vector executeQuery(java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-turbine","signature":"<org.apache.turbine.om.peer.BasePeer: java.util.Vector executeQuery(java.lang.String,java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-turbine","signature":"<org.apache.turbine.om.peer.BasePeer: java.util.Vector executeQuery(java.lang.String,java.lang.String,boolean)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-turbine","signature":"<org.apache.turbine.om.peer.BasePeer: java.util.Vector executeQuery(java.lang.String,boolean,org.apache.turbine.util.db.pool.DBConnection)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-turbine","signature":"<org.apache.turbine.om.peer.BasePeer: java.util.Vector executeQuery(java.lang.String,int,int,boolean,org.apache.turbine.util.db.pool.DBConnection)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-turbine","signature":"<org.apache.turbine.om.peer.BasePeer: java.util.Vector executeQuery(java.lang.String,int,int,java.lang.String,boolean)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-turbine","signature":"<org.apache.torque.util.BasePeer: java.util.Vector executeQuery(java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-turbine","signature":"<org.apache.torque.util.BasePeer: java.util.Vector executeQuery(java.lang.String,java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-turbine","signature":"<org.apache.torque.util.BasePeer: java.util.Vector executeQuery(java.lang.String,java.lang.String,boolean)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-turbine","signature":"<org.apache.torque.util.BasePeer: java.util.Vector executeQuery(java.lang.String,boolean,org.apache.turbine.util.db.pool.DBConnection)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-turbine","signature":"<org.apache.torque.util.BasePeer: java.util.Vector executeQuery(java.lang.String,int,int,boolean,org.apache.turbine.util.db.pool.DBConnection)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-turbine","signature":"<org.apache.torque.util.BasePeer: java.util.Vector executeQuery(java.lang.String,int,int,java.lang.String,boolean)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-vertx","signature":"<io.vertx.sqlclient.SqlClient: io.vertx.sqlclient.Query query(java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-vertx","signature":"<io.vertx.sqlclient.SqlClient: io.vertx.sqlclient.PreparedQuery preparedQuery(java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-vertx","signature":"<io.vertx.sqlclient.SqlConnection: io.vertx.sqlclient.SqlConnection prepare(java.lang.String,io.vertx.core.Handler)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"sql-injection-vertx","signature":"<io.vertx.sqlclient.SqlConnection: io.vertx.core.Future prepare(java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},

  "SSTI",
  "https://javadoc.io/doc/org.apache.velocity/velocity/latest/index.html",
  {"kind":"template-injection","signature":"<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"template-injection","signature":"<freemarker.template.Template: void process(java.lang.Object,java.io.Writer)>","subtypes":true,"arg":"Argument[0].MapValues","provenance":"manual","ext":""},
  {"kind":"template-injection","signature":"com.mitchellbosecke.pebble.template.PebbleTemplate: * evaluate(Writer,Map)","subtypes":true,"arg":"Argument[1].MapValues","provenance":"manual","ext":""},
  {"kind":"template-injection","signature":"com.mitchellbosecke.pebble.template.PebbleTemplate: * evaluate(Writer,Map,Locale)","subtypes":true,"arg":"Argument[1].MapValues","provenance":"manual","ext":""},
  {"kind":"template-injection","signature":"com.mitchellbosecke.pebble.template.PebbleTemplate: * evaluateBlock(String,Writer,Map)","subtypes":true,"arg":"Argument[2].MapValues","provenance":"manual","ext":""},
  {"kind":"template-injection","signature":"com.mitchellbosecke.pebble.template.PebbleTemplate: * evaluateBlock(String,Writer,Map,Locale)","subtypes":true,"arg":"Argument[2].MapValues","provenance":"manual","ext":""},
  {"kind":"template-injection","signature":"org.apache.velocity.app.Velocity: * evaluate(Context context, Writer writer, String logTag, InputStream instream)","subtypes":true,"arg":"Argument[3]","provenance":"manual","ext":""},
  {"kind":"template-injection","signature":"org.apache.velocity.app.Velocity: * evaluate(Context context, Writer writer, String logTag, Reader reader)","subtypes":true,"arg":"Argument[3]","provenance":"manual","ext":""},
  {"kind":"template-injection","signature":"org.apache.velocity.app.Velocity: * evaluate(Context context, Writer out, String logTag, String instring)","subtypes":true,"arg":"Argument[3]","provenance":"manual","ext":""},
  {"kind":"template-injection","signature":"org.apache.velocity.app.VelocityEngine: * evaluate(Context context, Writer writer, String logTag, InputStream instream)","subtypes":true,"arg":"Argument[3]","provenance":"manual","ext":""},
  {"kind":"template-injection","signature":"org.apache.velocity.app.VelocityEngine: * evaluate(Context context, Writer writer, String logTag, Reader reader)","subtypes":true,"arg":"Argument[3]","provenance":"manual","ext":""},
  {"kind":"template-injection","signature":"org.apache.velocity.app.VelocityEngine: * evaluate(Context context, Writer out, String logTag, String instring)","subtypes":true,"arg":"Argument[3]","provenance":"manual","ext":""},


  {"kind":"xss-injection","signature":"<play.api.mvc.Result: play.api.mvc.Result as(java.lang.String)>","subtypes":true,"arg":"Argument[this]","provenance":"manual","ext":""},
  {"kind":"xss-injection","signature":"<play.twirl.api.Html$: play.twirl.api.Html apply(java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"xss-injection-jsp","signature":"<javax.servlet.jsp.JspWriter: void write(java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"xss-injection-jsp","signature":"<javax.servlet.jsp.JspWriter: void write(java.lang.String,int,int)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"xss-injection-jsp","signature":"<javax.servlet.jsp.JspWriter: void write(char[])>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"xss-injection-jsp","signature":"<javax.servlet.jsp.JspWriter: void write(char[],int,int)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"xss-injection-jsp","signature":"<javax.servlet.jsp.JspWriter: java.io.Writer append(java.lang.CharSequence)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"xss-injection-jsp","signature":"<javax.servlet.jsp.JspWriter: java.io.Writer append(java.lang.CharSequence,int,int)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"xss-injection-jsp","signature":"<javax.servlet.jsp.JspWriter: java.io.Writer append(java.lang.CharSequence)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"xss-injection-jsp","signature":"<javax.servlet.jsp.JspWriter: java.io.Writer append(char)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"xss-injection-jsp","signature":"<javax.servlet.jsp.JspWriter: void print(java.lang.Object)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"xss-injection-jsp","signature":"<javax.servlet.jsp.JspWriter: void print(java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"xss-injection-jsp","signature":"<javax.servlet.jsp.JspWriter: void print(java.lang.Object)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"xss-injection-jsp","signature":"<javax.servlet.jsp.JspWriter: void print(char)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"xss-injection-jsp","signature":"<javax.servlet.jsp.JspWriter: void print(char[])>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"xss-injection-jsp","signature":"<javax.servlet.jsp.JspWriter: void println(java.lang.Object)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"xss-injection-jsp","signature":"<javax.servlet.jsp.JspWriter: void println(java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"xss-injection-jsp","signature":"<javax.servlet.jsp.JspWriter: void println(java.lang.Object)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"xss-injection-jsp","signature":"<javax.servlet.jsp.JspWriter: void println(char)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"xss-injection-jsp","signature":"<javax.servlet.jsp.JspWriter: void println(char[])>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"xss-servlet","signature":"<java.io.PrintWriter: void write(java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"xss-servlet","signature":"<java.io.PrintWriter: void write(java.lang.String,int,int)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"xss-servlet","signature":"<java.io.PrintWriter: void write(char[])>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"xss-servlet","signature":"<java.io.PrintWriter: void write(char[],int,int)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"xss-servlet","signature":"<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"xss-servlet","signature":"<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence,int,int)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"xss-servlet","signature":"<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"xss-servlet","signature":"<java.io.PrintWriter: java.io.PrintWriter append(char)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"xss-servlet","signature":"javax.servlet.ServletOutputStream: * print(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"xss-servlet","signature":"javax.servlet.ServletOutputStream: * println(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"xss-servlet","signature":"javax.servlet.ServletOutputStream: * write(byte[],**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},

  {"kind":"file-content-store,xss-servlet","signature":"java.io.PrintWriter: * format(Locale,String,Object[])","subtypes":false,"arg":"Argument[1..2]","provenance":"manual","ext":""},
  {"kind":"file-content-store,xss-servlet","signature":"java.io.PrintWriter: * format(String,Object[])","subtypes":false,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"file-content-store,xss-servlet","signature":"java.io.PrintWriter: * print(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"file-content-store,xss-servlet","signature":"java.io.PrintWriter: * printf(Locale,String,Object[])","subtypes":false,"arg":"Argument[1..2]","provenance":"manual","ext":""},
  {"kind":"file-content-store,xss-servlet","signature":"java.io.PrintWriter: * printf(String,Object[])","subtypes":false,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"file-content-store,xss-servlet","signature":"java.io.PrintWriter: * println(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},


  "SSRF",
  {"kind":"request-forgery","signature":"<java.net.URL: java.lang.Object getContent()>","subtypes":true,"arg":"Argument[-1]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"<java.net.URL: java.lang.Object getContent(java.lang.Class[])>","subtypes":true,"arg":"Argument[-1]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"<play.api.libs.ws.WSRequest: scala.concurrent.Future get()>","subtypes":true,"arg":"Argument[-1]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"<play.api.libs.ws.WSRequest: scala.concurrent.Future post(java.lang.Object,play.api.http.Writeable)>","subtypes":true,"arg":"Argument[-1]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"<play.api.libs.ws.WSRequest: scala.concurrent.Future post(java.lang.Object,play.api.http.Writeable)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},


  {"kind":"trust-boundary-violation","signature":"<javax.servlet.http.HttpSession: void setAttribute(java.lang.String,java.lang.Object)>","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"trust-boundary-violation","signature":"<javax.servlet.http.HttpSession: void putValue(java.lang.String,java.lang.Object)>","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"trust-boundary-violation","signature":"<javax.servlet.http.HttpSession: void setAttribute(java.lang.String,java.lang.Object)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"trust-boundary-violation","signature":"<javax.servlet.http.HttpSession: void putValue(java.lang.String,java.lang.Object)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},



  {"kind":"path-injection","signature":"<javax.servlet.ServletContext: java.net.URL getResource(java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"javax.servlet.ServletContext: * getResourceAsStream(String)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>","subtypes":false,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"java.io.File: * createTempFile(String,String,File)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"java.io.File: * createTempFile(String,String,File)","subtypes":true,"arg":"Argument[1]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"<javax.activation.FileDataSource: void <init>(java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"java.nio.file.Files: * createTempFile(Path,String,String,FileAttribute[])","subtypes":false,"arg":"Argument[2]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"java.nio.file.Files: * createTempFile(Path,String,String,FileAttribute[])","subtypes":false,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"<java.nio.file.Files: java.nio.file.Path createTempFile(java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute[])>","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"<java.nio.file.Files: java.nio.file.Path createTempFile(java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute[])>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"<java.nio.file.Files: java.nio.file.Path createTempDirectory(java.lang.String,java.nio.file.attribute.FileAttribute[])>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"java.nio.file.Files: * copy(**)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"java.nio.file.Files: * createTempDirectory(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"com.google.common.io.Resources: * asByteSource(URL)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"com.google.common.io.Resources: * asCharSource(URL,Charset)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"com.google.common.io.Resources: * copy(URL,OutputStream)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"com.google.common.io.Resources: * readLines(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"com.google.common.io.Resources: * toByteArray(URL)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"com.google.common.io.Resources: * toString(URL,Charset)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"<kotlin.io.FilesKt: java.io.File createTempFile$default(java.lang.String,java.lang.String,java.io.File,int,java.lang.Object)>","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"<kotlin.io.FilesKt: java.io.File createTempFile$default(java.lang.String,java.lang.String,java.io.File,int,java.lang.Object)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"<kotlin.io.FilesKt: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>","subtypes":true,"arg":"Argument[2]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"<kotlin.io.FilesKt: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"<kotlin.io.FilesKt: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"<kotlin.io.FilesKt: java.io.File createTempDir$default(java.lang.String,java.lang.String,java.io.File,int,java.lang.Object)>","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"<kotlin.io.FilesKt: java.io.File createTempDir$default(java.lang.String,java.lang.String,java.io.File,int,java.lang.Object)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"<kotlin.io.FilesKt: java.io.File createTempDir(java.lang.String,java.lang.String,java.io.File)>","subtypes":true,"arg":"Argument[2]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"<kotlin.io.FilesKt: java.io.File createTempDir(java.lang.String,java.lang.String,java.io.File)>","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"<kotlin.io.FilesKt: java.io.File createTempDir(java.lang.String,java.lang.String,java.io.File)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"<scala.reflect.io.File$: scala.reflect.io.File apply(scala.reflect.io.Path,scala.io.Codec)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"<scala.io.Source$: scala.io.BufferedSource fromFile(java.lang.String,scala.io.Codec)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"<scala.io.Source$: scala.io.BufferedSource fromFile(java.lang.String,java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"<scala.io.Source$: scala.io.BufferedSource fromFile(java.net.URI,scala.io.Codec)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"<scala.io.Source$: scala.io.BufferedSource fromFile(java.net.URI,java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},

  {"kind":"spel-injection","signature":"<org.springframework.expression.ExpressionParser: org.springframework.expression.Expression parseExpression(java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"spel-injection","signature":"<org.springframework.expression.spel.standard.SpelExpressionParser: org.springframework.expression.Expression parseExpression(java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"spel-injection","signature":"<org.springframework.expression.common.TemplateAwareExpressionParser: org.springframework.expression.Expression parseExpression(java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"spel-injection","signature":"<org.springframework.expression.ExpressionParser: org.springframework.expression.Expression parseExpression(java.lang.String,org.springframework.expression.ParserContext)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"spel-injection","signature":"<org.springframework.expression.spel.standard.SpelExpressionParser: org.springframework.expression.Expression parseExpression(java.lang.String,org.springframework.expression.ParserContext)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"spel-injection","signature":"<org.springframework.expression.common.TemplateAwareExpressionParser: org.springframework.expression.Expression parseExpression(java.lang.String,org.springframework.expression.ParserContext)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},

  {"kind":"request-forgery","signature":"cn.hutool.http.HttpRequest: void <init>(String)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"cn.hutool.http.HttpRequest: HttpRequest post(String)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"cn.hutool.http.HttpRequest: HttpRequest get(String)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"cn.hutool.http.HttpRequest: HttpRequest head(String)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"cn.hutool.http.HttpRequest: HttpRequest options(String)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"cn.hutool.http.HttpRequest: HttpRequest put(String)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"cn.hutool.http.HttpRequest: HttpRequest patch(String)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"cn.hutool.http.HttpRequest: HttpRequest delete(String)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"cn.hutool.http.HttpRequest: HttpRequest trace(String)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"cn.hutool.http.HttpRequest: HttpRequest setUrl(String)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},


  {"kind":"response-splitting","signature":"<javax.servlet.http.Cookie: void <init>(java.lang.String,java.lang.String)>","subtypes":true,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"response-splitting","signature":"<javax.servlet.http.Cookie: void setValue(java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"response-splitting","signature":"<javax.servlet.http.HttpServletResponseWrapper: void addHeader(java.lang.String,java.lang.String)>","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"response-splitting","signature":"<javax.servlet.http.HttpServletResponseWrapper: void addHeader(java.lang.String,java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"response-splitting","signature":"<javax.servlet.http.HttpServletResponseWrapper: void setHeader(java.lang.String,java.lang.String)>","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"response-splitting","signature":"<javax.servlet.http.HttpServletResponseWrapper: void setHeader(java.lang.String,java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},


  {"kind":"ldap-injection","signature":"<javax.naming.ldap.LdapName: void <init>(java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"javax.naming.Context: * lookup(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<javax.naming.directory.DirContext: java.lang.Object lookup(java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<javax.naming.directory.InitialDirContext: java.lang.Object lookup(java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<javax.naming.directory.InitialDirContext: javax.naming.NamingEnumeration search(javax.naming.Name,java.lang.String,javax.naming.directory.SearchControls)>","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<javax.naming.directory.InitialDirContext: javax.naming.NamingEnumeration search(javax.naming.Name,java.lang.String,java.lang.Object[],javax.naming.directory.SearchControls)>","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<javax.naming.directory.InitialDirContext: javax.naming.NamingEnumeration search(java.lang.String,java.lang.String,javax.naming.directory.SearchControls)>","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<javax.naming.directory.InitialDirContext: javax.naming.NamingEnumeration search(java.lang.String,java.lang.String,javax.naming.directory.SearchControls)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<javax.naming.directory.InitialDirContext: javax.naming.NamingEnumeration search(java.lang.String,java.lang.String,java.lang.Object[],javax.naming.directory.SearchControls)>","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<javax.naming.directory.InitialDirContext: javax.naming.NamingEnumeration search(java.lang.String,java.lang.String,java.lang.Object[],javax.naming.directory.SearchControls)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<javax.naming.ldap.LdapContext: java.lang.Object lookup(java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<javax.naming.ldap.LdapContext: javax.naming.NamingEnumeration search(javax.naming.Name,java.lang.String,javax.naming.directory.SearchControls)>","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<javax.naming.ldap.LdapContext: javax.naming.NamingEnumeration search(javax.naming.Name,java.lang.String,java.lang.Object[],javax.naming.directory.SearchControls)>","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<javax.naming.ldap.LdapContext: javax.naming.NamingEnumeration search(java.lang.String,java.lang.String,javax.naming.directory.SearchControls)>","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<javax.naming.ldap.LdapContext: javax.naming.NamingEnumeration search(java.lang.String,java.lang.String,javax.naming.directory.SearchControls)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<javax.naming.ldap.LdapContext: javax.naming.NamingEnumeration search(java.lang.String,java.lang.String,java.lang.Object[],javax.naming.directory.SearchControls)>","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<javax.naming.ldap.LdapContext: javax.naming.NamingEnumeration search(java.lang.String,java.lang.String,java.lang.Object[],javax.naming.directory.SearchControls)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<javax.naming.ldap.InitialLdapContext: java.lang.Object lookup(java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<javax.naming.ldap.InitialLdapContext: javax.naming.NamingEnumeration search(javax.naming.Name,java.lang.String,javax.naming.directory.SearchControls)>","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<javax.naming.ldap.InitialLdapContext: javax.naming.NamingEnumeration search(javax.naming.Name,java.lang.String,java.lang.Object[],javax.naming.directory.SearchControls)>","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<javax.naming.ldap.InitialLdapContext: javax.naming.NamingEnumeration search(java.lang.String,java.lang.String,javax.naming.directory.SearchControls)>","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<javax.naming.ldap.InitialLdapContext: javax.naming.NamingEnumeration search(java.lang.String,java.lang.String,javax.naming.directory.SearchControls)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<javax.naming.ldap.InitialLdapContext: javax.naming.NamingEnumeration search(java.lang.String,java.lang.String,java.lang.Object[],javax.naming.directory.SearchControls)>","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<javax.naming.ldap.InitialLdapContext: javax.naming.NamingEnumeration search(java.lang.String,java.lang.String,java.lang.Object[],javax.naming.directory.SearchControls)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<javax.naming.event.EventDirContext: java.lang.Object lookup(java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<javax.naming.event.EventDirContext: javax.naming.NamingEnumeration search(javax.naming.Name,java.lang.String,javax.naming.directory.SearchControls)>","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<javax.naming.event.EventDirContext: javax.naming.NamingEnumeration search(javax.naming.Name,java.lang.String,java.lang.Object[],javax.naming.directory.SearchControls)>","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<javax.naming.event.EventDirContext: javax.naming.NamingEnumeration search(java.lang.String,java.lang.String,javax.naming.directory.SearchControls)>","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<javax.naming.event.EventDirContext: javax.naming.NamingEnumeration search(java.lang.String,java.lang.String,javax.naming.directory.SearchControls)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<javax.naming.event.EventDirContext: javax.naming.NamingEnumeration search(java.lang.String,java.lang.String,java.lang.Object[],javax.naming.directory.SearchControls)>","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<javax.naming.event.EventDirContext: javax.naming.NamingEnumeration search(java.lang.String,java.lang.String,java.lang.Object[],javax.naming.directory.SearchControls)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<com.sun.jndi.ldap.LdapCtx: java.lang.Object lookup(java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<com.sun.jndi.ldap.LdapCtx: javax.naming.NamingEnumeration search(javax.naming.Name,java.lang.String,javax.naming.directory.SearchControls)>","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<com.sun.jndi.ldap.LdapCtx: javax.naming.NamingEnumeration search(javax.naming.Name,java.lang.String,java.lang.Object[],javax.naming.directory.SearchControls)>","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<com.sun.jndi.ldap.LdapCtx: javax.naming.NamingEnumeration search(java.lang.String,java.lang.String,javax.naming.directory.SearchControls)>","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<com.sun.jndi.ldap.LdapCtx: javax.naming.NamingEnumeration search(java.lang.String,java.lang.String,javax.naming.directory.SearchControls)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<com.sun.jndi.ldap.LdapCtx: javax.naming.NamingEnumeration search(java.lang.String,java.lang.String,java.lang.Object[],javax.naming.directory.SearchControls)>","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<com.sun.jndi.ldap.LdapCtx: javax.naming.NamingEnumeration search(java.lang.String,java.lang.String,java.lang.Object[],javax.naming.directory.SearchControls)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<org.springframework.ldap.core.LdapTemplate: java.util.List list(java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<org.springframework.ldap.core.LdapTemplate: java.util.List list(java.lang.String,org.springframework.ldap.core.NameClassPairMapper)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<org.springframework.ldap.core.LdapTemplate: void list(java.lang.String,org.springframework.ldap.core.NameClassPairCallbackHandler)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<org.springframework.ldap.core.LdapTemplate: java.lang.Object lookup(java.lang.String)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<org.springframework.ldap.core.LdapTemplate: java.lang.Object lookup(java.lang.String,org.springframework.ldap.core.AttributesMapper)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<org.springframework.ldap.core.LdapTemplate: java.lang.Object lookup(java.lang.String,org.springframework.ldap.core.ContextMapper)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"org.springframework.ldap.core.LdapOperations: * list(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"org.springframework.ldap.core.LdapOperations: * list(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"org.springframework.ldap.core.LdapOperations: * list(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"org.springframework.ldap.core.LdapOperations: * lookup(String)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<org.springframework.ldap.core.LdapOperations: java.lang.Object lookup(java.lang.String,org.springframework.ldap.core.AttributesMapper)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"org.springframework.ldap.core.LdapOperations: * lookup(String,ContextMapper)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<org.springframework.ldap.core.LdapOperations: void search(java.lang.String,java.lang.String,javax.naming.directory.SearchControls,org.springframework.ldap.core.NameClassPairCallbackHandler)>","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<org.springframework.ldap.core.LdapOperations: void search(java.lang.String,java.lang.String,javax.naming.directory.SearchControls,org.springframework.ldap.core.NameClassPairCallbackHandler)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<org.springframework.ldap.core.LdapOperations: java.util.List search(java.lang.String,java.lang.String,javax.naming.directory.SearchControls,org.springframework.ldap.core.AttributesMapper,org.springframework.ldap.core.DirContextProcessor)>","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<org.springframework.ldap.core.LdapOperations: java.util.List search(java.lang.String,java.lang.String,javax.naming.directory.SearchControls,org.springframework.ldap.core.AttributesMapper,org.springframework.ldap.core.DirContextProcessor)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<org.springframework.ldap.core.LdapOperations: java.util.List search(java.lang.String,java.lang.String,javax.naming.directory.SearchControls,org.springframework.ldap.core.ContextMapper,org.springframework.ldap.core.DirContextProcessor)>","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<org.springframework.ldap.core.LdapOperations: java.util.List search(java.lang.String,java.lang.String,javax.naming.directory.SearchControls,org.springframework.ldap.core.ContextMapper,org.springframework.ldap.core.DirContextProcessor)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<org.springframework.ldap.core.LdapOperations: void search(java.lang.String,java.lang.String,javax.naming.directory.SearchControls,org.springframework.ldap.core.NameClassPairCallbackHandler,org.springframework.ldap.core.DirContextProcessor)>","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<org.springframework.ldap.core.LdapOperations: void search(java.lang.String,java.lang.String,javax.naming.directory.SearchControls,org.springframework.ldap.core.NameClassPairCallbackHandler,org.springframework.ldap.core.DirContextProcessor)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<org.springframework.ldap.core.LdapOperations: void search(java.lang.String,java.lang.String,int,boolean,org.springframework.ldap.core.NameClassPairCallbackHandler)>","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<org.springframework.ldap.core.LdapOperations: void search(java.lang.String,java.lang.String,int,boolean,org.springframework.ldap.core.NameClassPairCallbackHandler)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<org.springframework.ldap.core.LdapOperations: void search(java.lang.String,java.lang.String,org.springframework.ldap.core.NameClassPairCallbackHandler)>","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<org.springframework.ldap.core.LdapOperations: void search(java.lang.String,java.lang.String,org.springframework.ldap.core.NameClassPairCallbackHandler)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<org.springframework.ldap.core.LdapOperations: java.util.List search(java.lang.String,java.lang.String,int,java.lang.String[],org.springframework.ldap.core.AttributesMapper)>","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<org.springframework.ldap.core.LdapOperations: java.util.List search(java.lang.String,java.lang.String,int,java.lang.String[],org.springframework.ldap.core.AttributesMapper)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<org.springframework.ldap.core.LdapOperations: java.util.List search(java.lang.String,java.lang.String,int,org.springframework.ldap.core.AttributesMapper)>","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<org.springframework.ldap.core.LdapOperations: java.util.List search(java.lang.String,java.lang.String,int,org.springframework.ldap.core.AttributesMapper)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<org.springframework.ldap.core.LdapOperations: java.util.List search(java.lang.String,java.lang.String,org.springframework.ldap.core.AttributesMapper)>","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<org.springframework.ldap.core.LdapOperations: java.util.List search(java.lang.String,java.lang.String,org.springframework.ldap.core.AttributesMapper)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"org.springframework.ldap.core.LdapOperations: * search(String,String,int,String[],ContextMapper)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"org.springframework.ldap.core.LdapOperations: * search(String,String,int,String[],ContextMapper)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"org.springframework.ldap.core.LdapOperations: * search(String,String,int,ContextMapper)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"org.springframework.ldap.core.LdapOperations: * search(String,String,int,ContextMapper)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"org.springframework.ldap.core.LdapOperations: * search(String,String,ContextMapper)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"org.springframework.ldap.core.LdapOperations: * search(String,String,ContextMapper)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<org.springframework.ldap.core.LdapOperations: java.util.List search(java.lang.String,java.lang.String,javax.naming.directory.SearchControls,org.springframework.ldap.core.ContextMapper)>","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<org.springframework.ldap.core.LdapOperations: java.util.List search(java.lang.String,java.lang.String,javax.naming.directory.SearchControls,org.springframework.ldap.core.ContextMapper)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<org.springframework.ldap.core.LdapOperations: java.util.List search(java.lang.String,java.lang.String,javax.naming.directory.SearchControls,org.springframework.ldap.core.AttributesMapper)>","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"<org.springframework.ldap.core.LdapOperations: java.util.List search(java.lang.String,java.lang.String,javax.naming.directory.SearchControls,org.springframework.ldap.core.AttributesMapper)>","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},

  {"kind":"url-redirection","signature":"scala.runtime.AbstractFunction0: * Redirect(**)","subtypes":true,"arg":"ReturnValue","provenance":"manual","ext":""},
  {"kind":"url-redirection","signature":"scala.runtime.AbstractFunction0: * SeeOther(**)","subtypes":true,"arg":"ReturnValue","provenance":"manual","ext":""},
  {"kind":"url-redirection","signature":"scala.runtime.AbstractFunction0: * MovedPermanently(**)","subtypes":true,"arg":"ReturnValue","provenance":"manual","ext":""},
  {"kind":"url-redirection","signature":"scala.runtime.AbstractFunction0: * TemporaryRedirect(**)","subtypes":true,"arg":"ReturnValue","provenance":"manual","ext":""},

  {"kind":"log4j-injection","signature":"org.apache.log4j.Category: * assertLog(**)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.log4j.Category: * debug(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.log4j.Category: * error(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.log4j.Category: * fatal(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.log4j.Category: * forcedLog(**)","subtypes":true,"arg":"Argument[2]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.log4j.Category: * info(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.log4j.Category: * l7dlog(Priority,String,Object[],Throwable)","subtypes":true,"arg":"Argument[2]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.log4j.Category: * log(Priority,Object)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.log4j.Category: * log(Priority,Object,Throwable)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.log4j.Category: * log(String,Priority,Object,Throwable)","subtypes":true,"arg":"Argument[2]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.log4j.Category: * warn(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.LogBuilder: * log(CharSequence)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.LogBuilder: * log(Message)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.LogBuilder: * log(Object)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.LogBuilder: * log(String)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.LogBuilder: * log(String,Object)","subtypes":true,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.LogBuilder: * log(String,Object,Object)","subtypes":true,"arg":"Argument[0..2]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.LogBuilder: * log(String,Object,Object,Object)","subtypes":true,"arg":"Argument[0..3]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.LogBuilder: * log(String,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[0..4]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.LogBuilder: * log(String,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[0..5]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.LogBuilder: * log(String,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[0..6]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.LogBuilder: * log(String,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[0..7]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.LogBuilder: * log(String,Object,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[0..8]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.LogBuilder: * log(String,Object,Object,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[0..9]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.LogBuilder: * log(String,Object,Object,Object,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[0..10]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.LogBuilder: * log(String,Object[])","subtypes":true,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.LogBuilder: * log(String,Supplier)","subtypes":true,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.LogBuilder: * log(Supplier)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * debug(CharSequence)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * debug(CharSequence,Throwable)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * debug(Marker,CharSequence)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * debug(Marker,CharSequence,Throwable)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * debug(Marker,Message)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * debug(Marker,MessageSupplier)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * debug(Marker,MessageSupplier,Throwable)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * debug(Marker,Object)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * debug(Marker,Object,Throwable)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * debug(Marker,String)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * debug(Marker,String,Object)","subtypes":true,"arg":"Argument[1..2]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * debug(Marker,String,Object,Object)","subtypes":true,"arg":"Argument[1..3]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * debug(Marker,String,Object,Object,Object)","subtypes":true,"arg":"Argument[1..4]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * debug(Marker,String,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[1..5]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * debug(Marker,String,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[1..6]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * debug(Marker,String,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[1..7]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * debug(Marker,String,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[1..8]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * debug(Marker,String,Object,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[1..9]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * debug(Marker,String,Object,Object,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[1..10]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * debug(Marker,String,Object,Object,Object,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[1..11]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * debug(Marker,String,Object[])","subtypes":true,"arg":"Argument[1..2]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * debug(Marker,String,Supplier)","subtypes":true,"arg":"Argument[1..2]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * debug(Marker,String,Throwable)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * debug(Marker,Supplier)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * debug(Marker,Supplier,Throwable)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * debug(Message)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * debug(Message,Throwable)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * debug(MessageSupplier)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * debug(MessageSupplier,Throwable)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * debug(Object)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * debug(Object,Throwable)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * debug(String)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * debug(String,Object)","subtypes":true,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * debug(String,Object,Object)","subtypes":true,"arg":"Argument[0..2]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * debug(String,Object,Object,Object)","subtypes":true,"arg":"Argument[0..3]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * debug(String,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[0..4]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * debug(String,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[0..5]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * debug(String,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[0..6]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * debug(String,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[0..7]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * debug(String,Object,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[0..8]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * debug(String,Object,Object,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[0..9]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * debug(String,Object,Object,Object,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[0..10]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * debug(String,Object[])","subtypes":true,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * debug(String,Supplier)","subtypes":true,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * debug(String,Throwable)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * debug(Supplier)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * debug(Supplier,Throwable)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * entry(Object[])","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * error(CharSequence)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * error(CharSequence,Throwable)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * error(Marker,CharSequence)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * error(Marker,CharSequence,Throwable)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * error(Marker,Message)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * error(Marker,MessageSupplier)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * error(Marker,MessageSupplier,Throwable)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * error(Marker,Object)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * error(Marker,Object,Throwable)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * error(Marker,String)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * error(Marker,String,Object)","subtypes":true,"arg":"Argument[1..2]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * error(Marker,String,Object,Object)","subtypes":true,"arg":"Argument[1..3]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * error(Marker,String,Object,Object,Object)","subtypes":true,"arg":"Argument[1..4]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * error(Marker,String,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[1..5]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * error(Marker,String,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[1..6]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * error(Marker,String,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[1..7]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * error(Marker,String,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[1..8]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * error(Marker,String,Object,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[1..9]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * error(Marker,String,Object,Object,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[1..10]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * error(Marker,String,Object,Object,Object,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[1..11]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * error(Marker,String,Object[])","subtypes":true,"arg":"Argument[1..2]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * error(Marker,String,Supplier)","subtypes":true,"arg":"Argument[1..2]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * error(Marker,String,Throwable)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * error(Marker,Supplier)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * error(Marker,Supplier,Throwable)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * error(Message)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * error(Message,Throwable)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * error(MessageSupplier)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * error(MessageSupplier,Throwable)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * error(Object)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * error(Object,Throwable)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * error(String)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * error(String,Object)","subtypes":true,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * error(String,Object,Object)","subtypes":true,"arg":"Argument[0..2]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * error(String,Object,Object,Object)","subtypes":true,"arg":"Argument[0..3]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * error(String,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[0..4]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * error(String,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[0..5]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * error(String,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[0..6]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * error(String,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[0..7]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * error(String,Object,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[0..8]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * error(String,Object,Object,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[0..9]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * error(String,Object,Object,Object,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[0..10]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * error(String,Object[])","subtypes":true,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * error(String,Supplier)","subtypes":true,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * error(String,Throwable)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * error(Supplier)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * error(Supplier,Throwable)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * fatal(CharSequence)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * fatal(CharSequence,Throwable)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * fatal(Marker,CharSequence)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * fatal(Marker,CharSequence,Throwable)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * fatal(Marker,Message)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * fatal(Marker,MessageSupplier)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * fatal(Marker,MessageSupplier,Throwable)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * fatal(Marker,Object)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * fatal(Marker,Object,Throwable)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * fatal(Marker,String)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * fatal(Marker,String,Object)","subtypes":true,"arg":"Argument[1..2]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * fatal(Marker,String,Object,Object)","subtypes":true,"arg":"Argument[1..3]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * fatal(Marker,String,Object,Object,Object)","subtypes":true,"arg":"Argument[1..4]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * fatal(Marker,String,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[1..5]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * fatal(Marker,String,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[1..6]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * fatal(Marker,String,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[1..7]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * fatal(Marker,String,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[1..8]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * fatal(Marker,String,Object,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[1..9]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * fatal(Marker,String,Object,Object,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[1..10]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * fatal(Marker,String,Object,Object,Object,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[1..11]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * fatal(Marker,String,Object[])","subtypes":true,"arg":"Argument[1..2]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * fatal(Marker,String,Supplier)","subtypes":true,"arg":"Argument[1..2]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * fatal(Marker,String,Throwable)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * fatal(Marker,Supplier)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * fatal(Marker,Supplier,Throwable)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * fatal(Message)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * fatal(Message,Throwable)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * fatal(MessageSupplier)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * fatal(MessageSupplier,Throwable)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * fatal(Object)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * fatal(Object,Throwable)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * fatal(String)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * fatal(String,Object)","subtypes":true,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * fatal(String,Object,Object)","subtypes":true,"arg":"Argument[0..2]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * fatal(String,Object,Object,Object)","subtypes":true,"arg":"Argument[0..3]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * fatal(String,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[0..4]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * fatal(String,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[0..5]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * fatal(String,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[0..6]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * fatal(String,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[0..7]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * fatal(String,Object,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[0..8]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * fatal(String,Object,Object,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[0..9]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * fatal(String,Object,Object,Object,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[0..10]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * fatal(String,Object[])","subtypes":true,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * fatal(String,Supplier)","subtypes":true,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * fatal(String,Throwable)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * fatal(Supplier)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * fatal(Supplier,Throwable)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * info(CharSequence)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * info(CharSequence,Throwable)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * info(Marker,CharSequence)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * info(Marker,CharSequence,Throwable)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * info(Marker,Message)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * info(Marker,MessageSupplier)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * info(Marker,MessageSupplier,Throwable)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * info(Marker,Object)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * info(Marker,Object,Throwable)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * info(Marker,String)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * info(Marker,String,Object)","subtypes":true,"arg":"Argument[1..2]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * info(Marker,String,Object,Object)","subtypes":true,"arg":"Argument[1..3]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * info(Marker,String,Object,Object,Object)","subtypes":true,"arg":"Argument[1..4]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * info(Marker,String,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[1..5]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * info(Marker,String,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[1..6]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * info(Marker,String,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[1..7]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * info(Marker,String,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[1..8]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * info(Marker,String,Object,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[1..9]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * info(Marker,String,Object,Object,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[1..10]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * info(Marker,String,Object,Object,Object,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[1..11]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * info(Marker,String,Object[])","subtypes":true,"arg":"Argument[1..2]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * info(Marker,String,Supplier)","subtypes":true,"arg":"Argument[1..2]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * info(Marker,String,Throwable)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * info(Marker,Supplier)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * info(Marker,Supplier,Throwable)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * info(Message)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * info(Message,Throwable)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * info(MessageSupplier)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * info(MessageSupplier,Throwable)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * info(Object)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * info(Object,Throwable)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * info(String)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * info(String,Object)","subtypes":true,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * info(String,Object,Object)","subtypes":true,"arg":"Argument[0..2]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * info(String,Object,Object,Object)","subtypes":true,"arg":"Argument[0..3]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * info(String,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[0..4]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * info(String,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[0..5]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * info(String,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[0..6]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * info(String,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[0..7]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * info(String,Object,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[0..8]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * info(String,Object,Object,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[0..9]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * info(String,Object,Object,Object,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[0..10]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * info(String,Object[])","subtypes":true,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * info(String,Supplier)","subtypes":true,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * info(String,Throwable)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * info(Supplier)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * info(Supplier,Throwable)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * log(Level,CharSequence)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * log(Level,CharSequence,Throwable)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * log(Level,Marker,CharSequence)","subtypes":true,"arg":"Argument[2]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * log(Level,Marker,CharSequence,Throwable)","subtypes":true,"arg":"Argument[2]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * log(Level,Marker,Message)","subtypes":true,"arg":"Argument[2]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * log(Level,Marker,MessageSupplier)","subtypes":true,"arg":"Argument[2]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * log(Level,Marker,MessageSupplier,Throwable)","subtypes":true,"arg":"Argument[2]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * log(Level,Marker,Object)","subtypes":true,"arg":"Argument[2]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * log(Level,Marker,Object,Throwable)","subtypes":true,"arg":"Argument[2]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * log(Level,Marker,String)","subtypes":true,"arg":"Argument[2]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * log(Level,Marker,String,Object)","subtypes":true,"arg":"Argument[2..3]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * log(Level,Marker,String,Object,Object)","subtypes":true,"arg":"Argument[2..4]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * log(Level,Marker,String,Object,Object,Object)","subtypes":true,"arg":"Argument[2..5]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * log(Level,Marker,String,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[2..6]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * log(Level,Marker,String,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[2..7]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * log(Level,Marker,String,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[2..8]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * log(Level,Marker,String,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[2..9]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * log(Level,Marker,String,Object,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[2..10]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * log(Level,Marker,String,Object,Object,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[2..11]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * log(Level,Marker,String,Object,Object,Object,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[2..12]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * log(Level,Marker,String,Object[])","subtypes":true,"arg":"Argument[2..3]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * log(Level,Marker,String,Supplier)","subtypes":true,"arg":"Argument[2..3]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * log(Level,Marker,String,Throwable)","subtypes":true,"arg":"Argument[2]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * log(Level,Marker,Supplier)","subtypes":true,"arg":"Argument[2]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * log(Level,Marker,Supplier,Throwable)","subtypes":true,"arg":"Argument[2]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * log(Level,Message)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * log(Level,Message,Throwable)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * log(Level,MessageSupplier)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * log(Level,MessageSupplier,Throwable)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * log(Level,Object)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * log(Level,Object,Throwable)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * log(Level,String)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * log(Level,String,Object)","subtypes":true,"arg":"Argument[1..2]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * log(Level,String,Object,Object)","subtypes":true,"arg":"Argument[1..3]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * log(Level,String,Object,Object,Object)","subtypes":true,"arg":"Argument[1..4]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * log(Level,String,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[1..5]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * log(Level,String,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[1..6]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * log(Level,String,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[1..7]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * log(Level,String,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[1..8]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * log(Level,String,Object,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[1..9]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * log(Level,String,Object,Object,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[1..10]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * log(Level,String,Object,Object,Object,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[1..11]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * log(Level,String,Object[])","subtypes":true,"arg":"Argument[1..2]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * log(Level,String,Supplier)","subtypes":true,"arg":"Argument[1..2]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * log(Level,String,Throwable)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * log(Level,Supplier)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * log(Level,Supplier,Throwable)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * logMessage(Level,Marker,String,StackTraceElement,Message,Throwable)","subtypes":true,"arg":"Argument[4]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * printf(Level,Marker,String,Object[])","subtypes":true,"arg":"Argument[2..3]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * printf(Level,String,Object[])","subtypes":true,"arg":"Argument[1..2]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * trace(CharSequence)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * trace(CharSequence,Throwable)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * trace(Marker,CharSequence)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * trace(Marker,CharSequence,Throwable)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * trace(Marker,Message)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * trace(Marker,MessageSupplier)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * trace(Marker,MessageSupplier,Throwable)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * trace(Marker,Object)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * trace(Marker,Object,Throwable)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * trace(Marker,String)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * trace(Marker,String,Object)","subtypes":true,"arg":"Argument[1..2]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * trace(Marker,String,Object,Object)","subtypes":true,"arg":"Argument[1..3]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * trace(Marker,String,Object,Object,Object)","subtypes":true,"arg":"Argument[1..4]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * trace(Marker,String,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[1..5]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * trace(Marker,String,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[1..6]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * trace(Marker,String,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[1..7]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * trace(Marker,String,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[1..8]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * trace(Marker,String,Object,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[1..9]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * trace(Marker,String,Object,Object,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[1..10]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * trace(Marker,String,Object,Object,Object,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[1..11]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * trace(Marker,String,Object[])","subtypes":true,"arg":"Argument[1..2]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * trace(Marker,String,Supplier)","subtypes":true,"arg":"Argument[1..2]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * trace(Marker,String,Throwable)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * trace(Marker,Supplier)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * trace(Marker,Supplier,Throwable)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * trace(Message)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * trace(Message,Throwable)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * trace(MessageSupplier)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * trace(MessageSupplier,Throwable)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * trace(Object)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * trace(Object,Throwable)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * trace(String)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * trace(String,Object)","subtypes":true,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * trace(String,Object,Object)","subtypes":true,"arg":"Argument[0..2]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * trace(String,Object,Object,Object)","subtypes":true,"arg":"Argument[0..3]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * trace(String,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[0..4]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * trace(String,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[0..5]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * trace(String,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[0..6]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * trace(String,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[0..7]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * trace(String,Object,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[0..8]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * trace(String,Object,Object,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[0..9]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * trace(String,Object,Object,Object,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[0..10]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * trace(String,Object[])","subtypes":true,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * trace(String,Supplier)","subtypes":true,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * trace(String,Throwable)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * trace(Supplier)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * trace(Supplier,Throwable)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * traceEntry(Message)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * traceEntry(String,Object[])","subtypes":true,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * traceEntry(String,Supplier[])","subtypes":true,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * traceEntry(Supplier[])","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * traceExit(EntryMessage)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * traceExit(EntryMessage,Object)","subtypes":true,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * traceExit(Message,Object)","subtypes":true,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * traceExit(Object)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * traceExit(String,Object)","subtypes":true,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * warn(CharSequence)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * warn(CharSequence,Throwable)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * warn(Marker,CharSequence)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * warn(Marker,CharSequence,Throwable)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * warn(Marker,Message)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * warn(Marker,MessageSupplier)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * warn(Marker,MessageSupplier,Throwable)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * warn(Marker,Object)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * warn(Marker,Object,Throwable)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * warn(Marker,String)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * warn(Marker,String,Object)","subtypes":true,"arg":"Argument[1..2]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * warn(Marker,String,Object,Object)","subtypes":true,"arg":"Argument[1..3]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * warn(Marker,String,Object,Object,Object)","subtypes":true,"arg":"Argument[1..4]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * warn(Marker,String,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[1..5]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * warn(Marker,String,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[1..6]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * warn(Marker,String,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[1..7]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * warn(Marker,String,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[1..8]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * warn(Marker,String,Object,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[1..9]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * warn(Marker,String,Object,Object,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[1..10]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * warn(Marker,String,Object,Object,Object,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[1..11]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * warn(Marker,String,Object[])","subtypes":true,"arg":"Argument[1..2]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * warn(Marker,String,Supplier)","subtypes":true,"arg":"Argument[1..2]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * warn(Marker,String,Throwable)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * warn(Marker,Supplier)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * warn(Marker,Supplier,Throwable)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * warn(Message)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * warn(Message,Throwable)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * warn(MessageSupplier)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * warn(MessageSupplier,Throwable)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * warn(Object)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * warn(Object,Throwable)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * warn(String)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * warn(String,Object)","subtypes":true,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * warn(String,Object,Object)","subtypes":true,"arg":"Argument[0..2]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * warn(String,Object,Object,Object)","subtypes":true,"arg":"Argument[0..3]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * warn(String,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[0..4]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * warn(String,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[0..5]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * warn(String,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[0..6]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * warn(String,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[0..7]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * warn(String,Object,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[0..8]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * warn(String,Object,Object,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[0..9]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * warn(String,Object,Object,Object,Object,Object,Object,Object,Object,Object,Object)","subtypes":true,"arg":"Argument[0..10]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * warn(String,Object[])","subtypes":true,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * warn(String,Supplier)","subtypes":true,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * warn(String,Throwable)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * warn(Supplier)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"log4j-injection","signature":"org.apache.logging.log4j.Logger: * warn(Supplier,Throwable)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},

  {"kind":"path-injection","signature":"com.fasterxml.jackson.databind.ObjectMapper: * readValue(File,Class)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"com.fasterxml.jackson.databind.ObjectMapper: * writeValue(File,Object)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"com.google.common.io.Files: * asCharSink(File,Charset,FileWriteMode[])","subtypes":false,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"com.google.common.io.Files: * asCharSource(File,Charset)","subtypes":false,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"com.google.common.io.Files: * copy(File,OutputStream)","subtypes":false,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"com.google.common.io.Files: * readLines(File,Charset)","subtypes":false,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"com.google.common.io.Files: * toByteArray(File)","subtypes":false,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"com.google.common.io.Files: * toString(File,Charset)","subtypes":false,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"com.google.common.io.Files: * write(byte[],File)","subtypes":false,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"com.thoughtworks.xstream.XStream: * fromXML(File)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"kotlin.io.FilesKt: * appendBytes(File,byte[])","subtypes":false,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"kotlin.io.FilesKt: * appendText(File,String,Charset)","subtypes":false,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"kotlin.io.FilesKt: * bufferedWriter(File,Charset,int)","subtypes":false,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"kotlin.io.FilesKt: * copyRecursively(File,File,boolean,Function2)","subtypes":false,"arg":"Argument[1]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"kotlin.io.FilesKt: * copyTo(File,File,boolean,int)","subtypes":false,"arg":"Argument[1]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"kotlin.io.FilesKt: * outputStream(File)","subtypes":false,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"kotlin.io.FilesKt: * printWriter(File,Charset)","subtypes":false,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"kotlin.io.FilesKt: * writeBytes(File,byte[])","subtypes":false,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"kotlin.io.FilesKt: * writeText(File,String,Charset)","subtypes":false,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"kotlin.io.FilesKt: * writer(File,Charset)","subtypes":false,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.file.PathFilter: * accept(Path,BasicFileAttributes)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.file.PathUtils: * copyFile(URL,Path,CopyOption[])","subtypes":false,"arg":"Argument[1]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.file.PathUtils: * copyFileToDirectory(Path,Path,CopyOption[])","subtypes":false,"arg":"Argument[1]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.file.PathUtils: * copyFileToDirectory(URL,Path,CopyOption[])","subtypes":false,"arg":"Argument[1]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.file.PathUtils: * newOutputStream(Path,boolean)","subtypes":false,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.file.PathUtils: * writeString(Path,CharSequence,Charset,OpenOption[])","subtypes":false,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.filefilter.FileFilterUtils: * filter(IOFileFilter,File[])","subtypes":true,"arg":"Argument[1]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.filefilter.FileFilterUtils: * filterList(IOFileFilter,File[])","subtypes":true,"arg":"Argument[1]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.filefilter.FileFilterUtils: * filterSet(IOFileFilter,File[])","subtypes":true,"arg":"Argument[1]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.input.Tailer$Tailable: * getRandomAccess(String)","subtypes":true,"arg":"Argument[this]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.output.DeferredFileOutputStream: * writeTo(OutputStream)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.output.FileWriterWithEncoding: * <init>(File,Charset)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.output.FileWriterWithEncoding: * <init>(File,Charset,boolean)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.output.FileWriterWithEncoding: * <init>(File,CharsetEncoder)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.output.FileWriterWithEncoding: * <init>(File,CharsetEncoder,boolean)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.output.FileWriterWithEncoding: * <init>(File,String)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.output.FileWriterWithEncoding: * <init>(File,String,boolean)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.output.FileWriterWithEncoding: * <init>(String,Charset)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.output.FileWriterWithEncoding: * <init>(String,Charset,boolean)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.output.FileWriterWithEncoding: * <init>(String,CharsetEncoder)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.output.FileWriterWithEncoding: * <init>(String,CharsetEncoder,boolean)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.output.FileWriterWithEncoding: * <init>(String,String)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.output.FileWriterWithEncoding: * <init>(String,String,boolean)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.output.LockableFileWriter: * <init>(File)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.output.LockableFileWriter: * <init>(File,Charset)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.output.LockableFileWriter: * <init>(File,Charset,boolean,String)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.output.LockableFileWriter: * <init>(File,String)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.output.LockableFileWriter: * <init>(File,String,boolean,String)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.output.LockableFileWriter: * <init>(File,boolean)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.output.LockableFileWriter: * <init>(File,boolean,String)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.output.LockableFileWriter: * <init>(String)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.output.LockableFileWriter: * <init>(String,boolean)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.output.LockableFileWriter: * <init>(String,boolean,String)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.output.XmlStreamWriter: * <init>(File)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.output.XmlStreamWriter: * <init>(File,String)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * copyDirectory(File,File)","subtypes":true,"arg":"Argument[1]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * copyDirectory(File,File,FileFilter)","subtypes":true,"arg":"Argument[1]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * copyDirectory(File,File,FileFilter,boolean)","subtypes":true,"arg":"Argument[1]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * copyDirectory(File,File,FileFilter,boolean,CopyOption[])","subtypes":true,"arg":"Argument[1]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * copyDirectory(File,File,boolean)","subtypes":true,"arg":"Argument[1]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * copyDirectoryToDirectory(File,File)","subtypes":true,"arg":"Argument[1]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * copyFile(File,File)","subtypes":true,"arg":"Argument[1]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * copyFile(File,File,CopyOption[])","subtypes":true,"arg":"Argument[1]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * copyFile(File,File,boolean)","subtypes":true,"arg":"Argument[1]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * copyFile(File,File,boolean,CopyOption[])","subtypes":true,"arg":"Argument[1]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * copyFileToDirectory(File,File)","subtypes":true,"arg":"Argument[1]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * copyFileToDirectory(File,File,boolean)","subtypes":true,"arg":"Argument[1]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * copyInputStreamToFile(InputStream,File)","subtypes":true,"arg":"Argument[1]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * copyToDirectory(File,File)","subtypes":true,"arg":"Argument[1]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * copyToDirectory(Iterable,File)","subtypes":true,"arg":"Argument[1]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * copyToFile(InputStream,File)","subtypes":true,"arg":"Argument[1]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * copyURLToFile(URL,File)","subtypes":true,"arg":"Argument[1]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * copyURLToFile(URL,File,int,int)","subtypes":true,"arg":"Argument[1]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * moveDirectory(File,File)","subtypes":true,"arg":"Argument[1]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * moveDirectoryToDirectory(File,File,boolean)","subtypes":true,"arg":"Argument[1]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * moveFile(File,File)","subtypes":true,"arg":"Argument[1]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * moveFile(File,File,CopyOption[])","subtypes":true,"arg":"Argument[1]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * moveFileToDirectory(File,File,boolean)","subtypes":true,"arg":"Argument[1]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * moveToDirectory(File,File,boolean)","subtypes":true,"arg":"Argument[1]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * newOutputStream(File,boolean)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * openOutputStream(File)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * openOutputStream(File,boolean)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * touch(File)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * write(File,CharSequence)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * write(File,CharSequence,Charset)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * write(File,CharSequence,Charset,boolean)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * write(File,CharSequence,String)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * write(File,CharSequence,String,boolean)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * write(File,CharSequence,boolean)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * writeByteArrayToFile(File,byte[])","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * writeByteArrayToFile(File,byte[],boolean)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * writeByteArrayToFile(File,byte[],int,int)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * writeByteArrayToFile(File,byte[],int,int,boolean)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * writeLines(File,Collection)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * writeLines(File,Collection,String)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * writeLines(File,Collection,String,boolean)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * writeLines(File,Collection,boolean)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * writeLines(File,String,Collection)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * writeLines(File,String,Collection,String)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * writeLines(File,String,Collection,String,boolean)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * writeLines(File,String,Collection,boolean)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * writeStringToFile(File,String)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * writeStringToFile(File,String,Charset)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * writeStringToFile(File,String,Charset,boolean)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * writeStringToFile(File,String,String)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * writeStringToFile(File,String,String,boolean)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * writeStringToFile(File,String,boolean)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.IOUtils: * copy(URL,File)","subtypes":true,"arg":"Argument[1]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.RandomAccessFileMode: * create(File)","subtypes":false,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.RandomAccessFileMode: * create(Path)","subtypes":false,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.RandomAccessFileMode: * create(String)","subtypes":false,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"path-injection","signature":"hudson.lifecycle.Lifecycle: * rewriteHudsonWar(File)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"hudson.model.DirectoryBrowserSupport: * <init>(ModelObject,FilePath,String,String,boolean)","subtypes":false,"arg":"Argument[1]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"hudson.model.Items: * load(ItemGroup,File)","subtypes":true,"arg":"Argument[1]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"hudson.model.UpdateCenter$UpdateCenterConfiguration: * install(DownloadJob,File,File)","subtypes":true,"arg":"Argument[1]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"hudson.model.UpdateCenter$UpdateCenterConfiguration: * install(DownloadJob,File,File)","subtypes":true,"arg":"Argument[2]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"hudson.FilePath: * copyFrom(FilePath)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"hudson.FilePath: * copyFrom(URL)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"hudson.FilePath: * copyFrom(FileItem)","subtypes":false,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"hudson.FilePath: * copyRecursiveTo(DirScanner,FilePath,String,TarCompression)","subtypes":false,"arg":"Argument[1]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"hudson.FilePath: * copyRecursiveTo(String,FilePath)","subtypes":false,"arg":"Argument[1]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"hudson.FilePath: * copyRecursiveTo(String,String,FilePath)","subtypes":false,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"hudson.FilePath: * copyRecursiveTo(String,String,FilePath)","subtypes":false,"arg":"Argument[2]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"hudson.FilePath: * copyTo(FilePath)","subtypes":false,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"hudson.FilePath: * newInputStreamDenyingSymlinkAsNeeded(File,String,boolean)","subtypes":false,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"hudson.scm.ChangeLogParser: * parse(AbstractBuild,File)","subtypes":true,"arg":"Argument[1]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"hudson.scm.ChangeLogParser: * parse(Run,RepositoryBrowser,File)","subtypes":true,"arg":"Argument[2]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"hudson.scm.SCM: * checkout(AbstractBuild,Launcher,FilePath,BuildListener,File)","subtypes":true,"arg":"Argument[2]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"hudson.scm.SCM: * checkout(Run,Launcher,FilePath,TaskListener,File,SCMRevisionState)","subtypes":true,"arg":"Argument[2]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"hudson.scm.SCM: * compareRemoteRevisionWith(Job,Launcher,FilePath,TaskListener,SCMRevisionState)","subtypes":true,"arg":"Argument[2]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"hudson.util.io.ReopenableFileOutputStream: * <init>(File)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"hudson.util.io.RewindableFileOutputStream: * <init>(File)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"hudson.util.jna.GNUCLibrary: * open(String,int)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"hudson.util.jna.Kernel32: * MoveFileExA(String,String,int)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"hudson.util.jna.Kernel32: * MoveFileExA(String,String,int)","subtypes":true,"arg":"Argument[1]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"hudson.util.AtomicFileWriter: * <init>(File)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"hudson.util.AtomicFileWriter: * <init>(Path,Charset,boolean,boolean)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"hudson.util.AtomicFileWriter: * <init>(Path,Charset)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"hudson.util.ClasspathBuilder: * add(FilePath)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"hudson.util.IOUtils: * mkdirs(File)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"hudson.util.StreamTaskListener: * <init>(File,boolean,Charset)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"hudson.util.TextFile: * delete()","subtypes":true,"arg":"Argument[this]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"hudson.util.TextFile: * fastTail(**)","subtypes":true,"arg":"Argument[this]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"hudson.util.TextFile: * head(**)","subtypes":true,"arg":"Argument[this]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"hudson.util.TextFile: * lines()","subtypes":true,"arg":"Argument[this]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"hudson.util.TextFile: * read()","subtypes":true,"arg":"Argument[this]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"hudson.util.TextFile: * readTrim()","subtypes":true,"arg":"Argument[this]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"io.netty.handler.codec.http.multipart.HttpPostRequestEncoder: * addBodyFileUpload(String,File,String,boolean)","subtypes":true,"arg":"Argument[1]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"io.netty.handler.ssl.OpenSslServerContext: * <init>(File,File)","subtypes":false,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"io.netty.handler.ssl.SslContextBuilder: * forServer(File,File)","subtypes":false,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"io.netty.handler.ssl.SslContextBuilder: * trustManager(File)","subtypes":false,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"io.netty.handler.ssl.SslContextBuilder: * trustManager(InputStream)","subtypes":false,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"io.netty.handler.stream.ChunkedFile: * <init>(RandomAccessFile,long,long,int)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"io.netty.util.internal.PlatformDependent: * createTempFile(String,String,File)","subtypes":false,"arg":"Argument[2]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"java.io.File: * <init>(File,String)","subtypes":false,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"java.io.File: * <init>(String)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"java.io.File: * <init>(String,String)","subtypes":false,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"java.io.File: * <init>(URI)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"java.io.File: * createTempFile(String,String,File)","subtypes":true,"arg":"Argument[2]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"java.io.File: * renameTo(File)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"java.io.FileInputStream: * <init>(File)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"java.io.FileInputStream: * <init>(String)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"java.io.FileOutputStream: * <init>(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"java.io.FileReader: * <init>(File)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"java.io.FileReader: * <init>(String)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"java.io.FileReader: * <init>(String,Charset)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"java.io.FileSystem: * createDirectory(File)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"java.io.FileWriter: * <init>(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"java.io.PrintStream: * <init>(File)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"java.io.PrintStream: * <init>(File,Charset)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"java.io.PrintStream: * <init>(File,String)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"java.io.PrintStream: * <init>(String)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"java.io.PrintStream: * <init>(String,Charset)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"java.io.PrintStream: * <init>(String,String)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"java.io.PrintWriter: * <init>(File)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"java.io.PrintWriter: * <init>(File,Charset)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"java.io.PrintWriter: * <init>(File,String)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"java.io.PrintWriter: * <init>(String)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"java.io.PrintWriter: * <init>(String,Charset)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"java.io.PrintWriter: * <init>(String,String)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"java.io.RandomAccessFile: * <init>(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"java.lang.Class: * getResource(String)","subtypes":false,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"java.lang.Class: * getResourceAsStream(String)","subtypes":false,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"java.lang.ClassLoader: * getSystemResource(String)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"java.lang.ClassLoader: * getSystemResourceAsStream(String)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"java.lang.Module: * getResourceAsStream(String)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"java.nio.file.Files: * copy(Path,OutputStream)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"java.nio.file.Files: * copy(Path,Path,CopyOption[])","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"java.nio.file.Files: * copy(Path,Path,CopyOption[])","subtypes":false,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"java.nio.file.Files: * copy(InputStream,Path,CopyOption[])","subtypes":false,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"java.nio.file.Files: * createDirectories(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"java.nio.file.Files: * createDirectory(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"java.nio.file.Files: * createFile(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"java.nio.file.Files: * createLink(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"java.nio.file.Files: * createSymbolicLink(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"java.nio.file.Files: * createTempDirectory(Path,String,FileAttribute[])","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"java.nio.file.Files: * createTempFile(Path,String,String,FileAttribute[])","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"java.nio.file.Files: * delete(Path)","subtypes":false,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"java.nio.file.Files: * deleteIfExists(Path)","subtypes":false,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"java.nio.file.Files: * getFileStore(Path)","subtypes":false,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"java.nio.file.Files: * lines(Path,Charset)","subtypes":false,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"java.nio.file.Files: * lines(Path)","subtypes":false,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"java.nio.file.Files: * move(**)","subtypes":false,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"java.nio.file.Files: * newBufferedReader(Path,Charset)","subtypes":false,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"java.nio.file.Files: * newBufferedReader(Path)","subtypes":false,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"java.nio.file.Files: * newBufferedWriter(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"java.nio.file.Files: * newInputStream(Path,OpenOption[])","subtypes":false,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"java.nio.file.Files: * newOutputStream(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"java.nio.file.Files: * probeContentType(Path)","subtypes":false,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"java.nio.file.Files: * readAllBytes(Path)","subtypes":false,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"java.nio.file.Files: * readAllLines(Path,Charset)","subtypes":false,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"java.nio.file.Files: * readAllLines(Path)","subtypes":false,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"java.nio.file.Files: * readString(Path,Charset)","subtypes":false,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"java.nio.file.Files: * readString(Path)","subtypes":false,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"java.nio.file.Files: * write(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"java.nio.file.Files: * writeString(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"java.nio.file.Files: * move(Path,Path,CopyOption[])","subtypes":true,"arg":"Argument[1]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"java.nio.file.Files: * move(Path,Path,CopyOption[])","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"java.nio.file.Files: * delete(Path)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"java.nio.file.Files: * newInputStream(Path,OpenOption[])","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"java.nio.file.Files: * newOutputStream(Path,OpenOption[])","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"java.nio.file.FileSystem: * getPath(**)","subtypes":false,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"java.nio.file.Path: * of(String,String[])","subtypes":false,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"java.nio.file.Path: * of(URI)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"java.nio.file.Path: * resolve(String)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"java.nio.file.Path: * resolveSibling(String)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"java.nio.file.Paths: * get(String,String[])","subtypes":false,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"java.nio.file.Paths: * get(URI)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"java.nio.file.SecureDirectoryStream: * deleteDirectory(Path)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"java.nio.file.SecureDirectoryStream: * deleteFile(Path)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"javax.servlet.ServletContext: * getResourceAsStream(String)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"javax.xml.transform.stream.StreamResult: * <init>(File)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"kotlin.io.FilesKt: * deleteRecursively(File)","subtypes":false,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"kotlin.io.FilesKt: * inputStream(File)","subtypes":false,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"kotlin.io.FilesKt: * readBytes(File)","subtypes":false,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"kotlin.io.FilesKt: * readText(File,Charset)","subtypes":false,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"org.antlr.runtime.ANTLRFileStream: * <init>(String,String)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * copyInputStreamToFile(InputStream,File)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * copyToFile(InputStream,File)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.io.FileUtils: * openInputStream(File)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.net.util.KeyManagerUtils: * createClientKeyManager(File,String)","subtypes":false,"arg":"Argument[0]","provenance":"df-manual","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.net.util.KeyManagerUtils: * createClientKeyManager(File,String,String)","subtypes":false,"arg":"Argument[0]","provenance":"df-manual","ext":""},
  {"kind":"path-injection","signature":"org.apache.commons.net.util.KeyManagerUtils: * createClientKeyManager(String,File,String,String,String)","subtypes":false,"arg":"Argument[1]","provenance":"df-manual","ext":""},
  {"kind":"path-injection","signature":"org.apache.tools.ant.AntClassLoader: * addPathComponent(File)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"org.apache.tools.ant.AntClassLoader: * <init>(ClassLoader,Project,Path,boolean)","subtypes":true,"arg":"Argument[2]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"org.apache.tools.ant.AntClassLoader: * <init>(Project,Path,boolean)","subtypes":true,"arg":"Argument[1]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"org.apache.tools.ant.AntClassLoader: * <init>(Project,Path)","subtypes":true,"arg":"Argument[1]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"org.apache.tools.ant.DirectoryScanner: * setBasedir(File)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"org.apache.tools.ant.taskdefs.Copy: * addFileset(FileSet)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"org.apache.tools.ant.taskdefs.Copy: * setFile(File)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"org.apache.tools.ant.taskdefs.Copy: * setTodir(File)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"org.apache.tools.ant.taskdefs.Copy: * setTofile(File)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"org.apache.tools.ant.taskdefs.Expand: * setDest(File)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"org.apache.tools.ant.taskdefs.Expand: * setSrc(File)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"org.codehaus.cargo.container.installer.ZipURLInstaller: * <init>(URL,String,String)","subtypes":true,"arg":"Argument[1]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"org.codehaus.cargo.container.installer.ZipURLInstaller: * <init>(URL,String,String)","subtypes":true,"arg":"Argument[2]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"org.fusesource.leveldbjni.JniDBFactory: * open(File,Options)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"org.kohsuke.stapler.framework.io.LargeText: * <init>(File,Charset,boolean,boolean)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"org.openjdk.jmh.runner.options.ChainedOptionsBuilder: * result(String)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"org.springframework.core.io.ResourceLoader: * getResource(String)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"path-injection","signature":"org.springframework.util.FileCopyUtils: * copy(byte[],File)","subtypes":false,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"org.springframework.util.FileCopyUtils: * copy(File,File)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"path-injection","signature":"org.springframework.util.FileCopyUtils: * copy(File,File)","subtypes":false,"arg":"Argument[1]","provenance":"manual","ext":""},

  {"kind":"html-injection","signature":"android.webkit.WebView: * loadData(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"html-injection","signature":"android.webkit.WebView: * loadDataWithBaseURL(**)","subtypes":false,"arg":"Argument[1]","provenance":"manual","ext":""},
  
  {"kind":"template-injection","signature":"com.hubspot.jinjava.Jinjava: * render(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"template-injection","signature":"com.hubspot.jinjava.Jinjava: * renderForResult(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  
  {"kind":"request-forgery","signature":"com.jcraft.jsch.JSch: * getSession(String,String,int)","subtypes":true,"arg":"Argument[1]","provenance":"ai-manual","ext":""},
  
  {"kind":"template-injection","signature":"com.mitchellbosecke.pebble.PebbleEngine: * getLiteralTemplate(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"template-injection","signature":"com.mitchellbosecke.pebble.PebbleEngine: * getTemplate(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  
  {"kind":"ldap-injection","signature":"com.unboundid.ldap.sdk.LDAPConnection: * asyncSearch(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"com.unboundid.ldap.sdk.LDAPConnection: * search(ReadOnlySearchRequest)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"com.unboundid.ldap.sdk.LDAPConnection: * search(SearchRequest)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"com.unboundid.ldap.sdk.LDAPConnection: * search(SearchResultListener,String,SearchScope,DereferencePolicy,int,int,boolean,Filter,String[])","subtypes":false,"arg":"Argument[0..7]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"com.unboundid.ldap.sdk.LDAPConnection: * search(SearchResultListener,String,SearchScope,DereferencePolicy,int,int,boolean,String,String[])","subtypes":false,"arg":"Argument[0..7]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"com.unboundid.ldap.sdk.LDAPConnection: * search(SearchResultListener,String,SearchScope,Filter,String[])","subtypes":false,"arg":"Argument[0..3]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"com.unboundid.ldap.sdk.LDAPConnection: * search(SearchResultListener,String,SearchScope,String,String[])","subtypes":false,"arg":"Argument[0..3]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"com.unboundid.ldap.sdk.LDAPConnection: * search(String,SearchScope,DereferencePolicy,int,int,boolean,Filter,String[])","subtypes":false,"arg":"Argument[0..6]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"com.unboundid.ldap.sdk.LDAPConnection: * search(String,SearchScope,DereferencePolicy,int,int,boolean,String,String[])","subtypes":false,"arg":"Argument[0..6]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"com.unboundid.ldap.sdk.LDAPConnection: * search(String,SearchScope,Filter,String[])","subtypes":false,"arg":"Argument[0..2]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"com.unboundid.ldap.sdk.LDAPConnection: * search(String,SearchScope,String,String[])","subtypes":false,"arg":"Argument[0..2]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"com.unboundid.ldap.sdk.LDAPConnection: * searchForEntry(ReadOnlySearchRequest)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"com.unboundid.ldap.sdk.LDAPConnection: * searchForEntry(SearchRequest)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"com.unboundid.ldap.sdk.LDAPConnection: * searchForEntry(String,SearchScope,DereferencePolicy,int,boolean,Filter,String[])","subtypes":false,"arg":"Argument[0..5]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"com.unboundid.ldap.sdk.LDAPConnection: * searchForEntry(String,SearchScope,DereferencePolicy,int,boolean,String,String[])","subtypes":false,"arg":"Argument[0..5]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"com.unboundid.ldap.sdk.LDAPConnection: * searchForEntry(String,SearchScope,Filter,String[])","subtypes":false,"arg":"Argument[0..2]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"com.unboundid.ldap.sdk.LDAPConnection: * searchForEntry(String,SearchScope,String,String[])","subtypes":false,"arg":"Argument[0..2]","provenance":"manual","ext":""},
  
  {"kind":"request-forgery","signature":"com.zaxxer.hikari.HikariConfig: * <init>(Properties)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"com.zaxxer.hikari.HikariConfig: * setJdbcUrl(String)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  
  {"kind":"template-injection","signature":"freemarker.cache.StringTemplateLoader: * putTemplate(**)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"template-injection","signature":"freemarker.template.Template: * <init>(String,Reader)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"template-injection","signature":"freemarker.template.Template: * <init>(String,Reader,Configuration)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"template-injection","signature":"freemarker.template.Template: * <init>(String,Reader,Configuration,String)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"template-injection","signature":"freemarker.template.Template: * <init>(String,String,Configuration)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"template-injection","signature":"freemarker.template.Template: * <init>(String,String,Reader,Configuration)","subtypes":true,"arg":"Argument[2]","provenance":"manual","ext":""},
  {"kind":"template-injection","signature":"freemarker.template.Template: * <init>(String,String,Reader,Configuration,ParserConfiguration,String)","subtypes":true,"arg":"Argument[2]","provenance":"manual","ext":""},
  {"kind":"template-injection","signature":"freemarker.template.Template: * <init>(String,String,Reader,Configuration,String)","subtypes":true,"arg":"Argument[2]","provenance":"manual","ext":""},
  
  {"kind":"request-forgery","signature":"kotlin.io.TextStreamsKt: * readBytes(URL)","subtypes":false,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"request-forgery","signature":"kotlin.io.TextStreamsKt: * readText(URL,Charset)","subtypes":false,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"request-forgery","signature":"org.apache.commons.io.file.PathUtils: * copyFile(URL,Path,CopyOption[])","subtypes":false,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"request-forgery","signature":"org.apache.commons.io.file.PathUtils: * copyFileToDirectory(URL,Path,CopyOption[])","subtypes":false,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"request-forgery","signature":"org.apache.commons.io.input.XmlStreamReader: * <init>(URL)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"request-forgery","signature":"org.apache.commons.io.FileUtils: * copyURLToFile(URL,File)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"request-forgery","signature":"org.apache.commons.io.FileUtils: * copyURLToFile(URL,File,int,int)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"request-forgery","signature":"org.apache.commons.io.IOUtils: * copy(URL,File)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"request-forgery","signature":"org.apache.commons.io.IOUtils: * copy(URL,OutputStream)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"request-forgery","signature":"org.apache.commons.io.IOUtils: * toByteArray(URI)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"request-forgery","signature":"org.apache.commons.io.IOUtils: * toByteArray(URL)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"request-forgery","signature":"org.apache.commons.io.IOUtils: * toString(URI)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"request-forgery","signature":"org.apache.commons.io.IOUtils: * toString(URI,Charset)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"request-forgery","signature":"org.apache.commons.io.IOUtils: * toString(URI,String)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"request-forgery","signature":"org.apache.commons.io.IOUtils: * toString(URL)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"request-forgery","signature":"org.apache.commons.io.IOUtils: * toString(URL,Charset)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  {"kind":"request-forgery","signature":"org.apache.commons.io.IOUtils: * toString(URL,String)","subtypes":true,"arg":"Argument[0]","provenance":"df-generated","ext":""},
  
  {"kind":"groovy-injection","signature":"groovy.lang.GroovyClassLoader: * parseClass(GroovyCodeSource)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"groovy-injection","signature":"groovy.lang.GroovyClassLoader: * parseClass(GroovyCodeSource,boolean)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"groovy-injection","signature":"groovy.lang.GroovyClassLoader: * parseClass(InputStream,String)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"groovy-injection","signature":"groovy.lang.GroovyClassLoader: * parseClass(Reader,String)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"groovy-injection","signature":"groovy.lang.GroovyClassLoader: * parseClass(String)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"groovy-injection","signature":"groovy.lang.GroovyClassLoader: * parseClass(String,String)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"groovy-injection","signature":"groovy.lang.GroovyShell: * evaluate(GroovyCodeSource)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"groovy-injection","signature":"groovy.lang.GroovyShell: * evaluate(Reader)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"groovy-injection","signature":"groovy.lang.GroovyShell: * evaluate(Reader,String)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"groovy-injection","signature":"groovy.lang.GroovyShell: * evaluate(String)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"groovy-injection","signature":"groovy.lang.GroovyShell: * evaluate(String,String)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"groovy-injection","signature":"groovy.lang.GroovyShell: * evaluate(String,String,String)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"groovy-injection","signature":"groovy.lang.GroovyShell: * evaluate(URI)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"groovy-injection","signature":"groovy.lang.GroovyShell: * parse(Reader)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"groovy-injection","signature":"groovy.lang.GroovyShell: * parse(Reader,String)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"groovy-injection","signature":"groovy.lang.GroovyShell: * parse(String)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"groovy-injection","signature":"groovy.lang.GroovyShell: * parse(String,String)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"groovy-injection","signature":"groovy.lang.GroovyShell: * parse(URI)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"groovy-injection","signature":"groovy.lang.GroovyShell: * run(GroovyCodeSource,List)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"groovy-injection","signature":"groovy.lang.GroovyShell: * run(GroovyCodeSource,String[])","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"groovy-injection","signature":"groovy.lang.GroovyShell: * run(Reader,String,List)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"groovy-injection","signature":"groovy.lang.GroovyShell: * run(Reader,String,String[])","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"groovy-injection","signature":"groovy.lang.GroovyShell: * run(String,String,List)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"groovy-injection","signature":"groovy.lang.GroovyShell: * run(String,String,String[])","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"groovy-injection","signature":"groovy.lang.GroovyShell: * run(URI,List)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"groovy-injection","signature":"groovy.lang.GroovyShell: * run(URI,String[])","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"groovy-injection","signature":"groovy.text.TemplateEngine: * createTemplate(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"groovy-injection","signature":"groovy.util.Eval: * me(String)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"groovy-injection","signature":"groovy.util.Eval: * me(String,Object,String)","subtypes":false,"arg":"Argument[2]","provenance":"manual","ext":""},
  {"kind":"groovy-injection","signature":"groovy.util.Eval: * x(Object,String)","subtypes":false,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"groovy-injection","signature":"groovy.util.Eval: * xy(Object,Object,String)","subtypes":false,"arg":"Argument[2]","provenance":"manual","ext":""},
  {"kind":"groovy-injection","signature":"groovy.util.Eval: * xyz(Object,Object,Object,String)","subtypes":false,"arg":"Argument[3]","provenance":"manual","ext":""},
  
  {"kind":"request-forgery","signature":"hudson.cli.FullDuplexHttpStream: * <init>(URL,String,String)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"request-forgery","signature":"hudson.cli.FullDuplexHttpStream: * <init>(URL,String,String)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"hudson.model.DownloadService: * loadJSON(URL)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"request-forgery","signature":"hudson.model.DownloadService: * loadJSONHTML(URL)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"request-forgery","signature":"hudson.model.UpdateCenter$UpdateCenterConfiguration: * download(DownloadJob,URL)","subtypes":true,"arg":"Argument[1]","provenance":"ai-manual","ext":""},
  {"kind":"request-forgery","signature":"hudson.FilePath: * installIfNecessaryFrom(URL,TaskListener,String)","subtypes":false,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"request-forgery","signature":"io.netty.bootstrap.Bootstrap: * connect(InetAddress,int)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"request-forgery","signature":"io.netty.bootstrap.Bootstrap: * connect(SocketAddress)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"request-forgery","signature":"io.netty.bootstrap.Bootstrap: * connect(String,int)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"request-forgery","signature":"io.netty.channel.Channel$Unsafe: * connect(SocketAddress,SocketAddress,ChannelPromise)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"request-forgery","signature":"io.netty.channel.ChannelDuplexHandler: * connect(ChannelHandlerContext,SocketAddress,SocketAddress,ChannelPromise)","subtypes":true,"arg":"Argument[1]","provenance":"ai-manual","ext":""},
  {"kind":"request-forgery","signature":"io.netty.channel.ChannelOutboundHandlerAdapter: * connect(ChannelHandlerContext,SocketAddress,SocketAddress,ChannelPromise)","subtypes":true,"arg":"Argument[1]","provenance":"ai-manual","ext":""},
  {"kind":"request-forgery","signature":"io.netty.channel.ChannelOutboundInvoker: * connect(SocketAddress,ChannelPromise)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"request-forgery","signature":"io.netty.channel.ChannelOutboundInvoker: * connect(SocketAddress,SocketAddress,ChannelPromise)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"request-forgery","signature":"io.netty.channel.ChannelOutboundInvoker: * connect(SocketAddress)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"request-forgery","signature":"io.netty.channel.DefaultChannelPipeline: * connect(SocketAddress,ChannelPromise)","subtypes":false,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"request-forgery","signature":"io.netty.channel.DefaultChannelPipeline: * connect(SocketAddress,SocketAddress,ChannelPromise)","subtypes":false,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"request-forgery","signature":"io.netty.channel.DefaultChannelPipeline: * connect(SocketAddress,SocketAddress)","subtypes":false,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"request-forgery","signature":"io.netty.handler.codec.http.DefaultFullHttpRequest: * <init>(HttpVersion,HttpMethod,String,ByteBuf)","subtypes":true,"arg":"Argument[2]","provenance":"ai-manual","ext":""},
  {"kind":"request-forgery","signature":"io.netty.handler.codec.http.DefaultHttpRequest: * <init>(HttpVersion,HttpMethod,String)","subtypes":true,"arg":"Argument[2]","provenance":"ai-manual","ext":""},
  {"kind":"request-forgery","signature":"io.netty.handler.codec.http.HttpRequest: * setUri(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"io.netty.util.internal.SocketUtils: * connect(Socket,SocketAddress,int)","subtypes":false,"arg":"Argument[1]","provenance":"ai-manual","ext":""},
  {"kind":"html-injection","signature":"jakarta.faces.context.ResponseStream: * write(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"html-injection","signature":"jakarta.faces.context.ResponseWriter: * write(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"jakarta.ws.rs.client.Client: * target(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"url-redirection","signature":"jakarta.ws.rs.core.Response: * seeOther(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"url-redirection","signature":"jakarta.ws.rs.core.Response: * temporaryRedirect(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"java.net.http.HttpRequest: * newBuilder(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"java.net.http.HttpRequest$Builder: * uri(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"java.net.DatagramSocket: * connect(SocketAddress)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"request-forgery","signature":"java.net.Socket: * <init>(String,int)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"request-forgery","signature":"java.net.URL: * openConnection(**)","subtypes":false,"arg":"Argument[this]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"java.net.URL: * openConnection(Proxy)","subtypes":false,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"request-forgery","signature":"java.net.URL: * openStream(**)","subtypes":false,"arg":"Argument[this]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"java.net.URLClassLoader: * <init>(String,URL[],ClassLoader)","subtypes":false,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"java.net.URLClassLoader: * <init>(String,URL[],ClassLoader,URLStreamHandlerFactory)","subtypes":false,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"java.net.URLClassLoader: * <init>(URL[])","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"java.net.URLClassLoader: * <init>(URL[],ClassLoader)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"java.net.URLClassLoader: * <init>(URL[],ClassLoader,URLStreamHandlerFactory)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"java.net.URLClassLoader: * newInstance(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"java.sql.Driver: * connect(String,Properties)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"java.sql.DriverManager: * getConnection(String)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"java.sql.DriverManager: * getConnection(String,Properties)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"java.sql.DriverManager: * getConnection(String,String,String)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"javafx.scene.web.WebEngine: * load(String)","subtypes":false,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"html-injection","signature":"javax.faces.context.ResponseStream: * write(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"html-injection","signature":"javax.faces.context.ResponseWriter: * write(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"javax.naming.directory.DirContext: * search(**)","subtypes":true,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"response-splitting","signature":"javax.servlet.http.HttpServletResponse: * addCookie(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"response-splitting","signature":"javax.servlet.http.HttpServletResponse: * addHeader(**)","subtypes":false,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"response-splitting","signature":"javax.servlet.http.HttpServletResponse: * setHeader(**)","subtypes":false,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"javax.ws.rs.client.Client: * target(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"url-redirection","signature":"javax.ws.rs.core.Response: * seeOther(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"url-redirection","signature":"javax.ws.rs.core.Response: * temporaryRedirect(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"response-splitting","signature":"javax.ws.rs.core.ResponseBuilder: * header(**)","subtypes":false,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"okhttp3.OkHttpClient: * newCall(Request)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"request-forgery","signature":"okhttp3.OkHttpClient: * newWebSocket(Request,WebSocketListener)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"request-forgery","signature":"okhttp3.Request: * <init>(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"okhttp3.Request$Builder: * url(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.commons.jelly.JellyContext: * <init>(JellyContext,URL,URL)","subtypes":true,"arg":"Argument[1]","provenance":"ai-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.commons.jelly.JellyContext: * <init>(JellyContext,URL,URL)","subtypes":true,"arg":"Argument[2]","provenance":"ai-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.commons.jelly.JellyContext: * <init>(JellyContext,URL)","subtypes":true,"arg":"Argument[1]","provenance":"ai-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.commons.jelly.JellyContext: * <init>(URL,URL)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.commons.jelly.JellyContext: * <init>(URL,URL)","subtypes":true,"arg":"Argument[1]","provenance":"ai-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.commons.jelly.JellyContext: * <init>(URL)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.commons.net.SocketClient: * connect(InetAddress)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.commons.net.SocketClient: * connect(InetAddress,int)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.commons.net.SocketClient: * connect(InetAddress,int,InetAddress,int)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.commons.net.SocketClient: * connect(String)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.commons.net.SocketClient: * connect(String,int)","subtypes":true,"arg":"Argument[0]","provenance":"df-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.commons.net.SocketClient: * connect(String,int,InetAddress,int)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"org.apache.directory.ldap.client.api.LdapConnection: * search(**)","subtypes":true,"arg":"Argument[0..2]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.BasicHttpRequests: * create(Method,HttpHost,String)","subtypes":true,"arg":"Argument[1]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.BasicHttpRequests: * create(Method,String)","subtypes":true,"arg":"Argument[1]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.BasicHttpRequests: * create(Method,URI)","subtypes":true,"arg":"Argument[1]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.BasicHttpRequests: * create(String,String)","subtypes":true,"arg":"Argument[1]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.BasicHttpRequests: * create(String,URI)","subtypes":true,"arg":"Argument[1]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.BasicHttpRequests: * delete(HttpHost,String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.BasicHttpRequests: * delete(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.BasicHttpRequests: * delete(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.BasicHttpRequests: * get(HttpHost,String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.BasicHttpRequests: * get(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.BasicHttpRequests: * get(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.BasicHttpRequests: * head(HttpHost,String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.BasicHttpRequests: * head(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.BasicHttpRequests: * head(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.BasicHttpRequests: * options(HttpHost,String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.BasicHttpRequests: * options(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.BasicHttpRequests: * options(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.BasicHttpRequests: * patch(HttpHost,String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.BasicHttpRequests: * patch(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.BasicHttpRequests: * patch(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.BasicHttpRequests: * post(HttpHost,String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.BasicHttpRequests: * post(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.BasicHttpRequests: * post(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.BasicHttpRequests: * put(HttpHost,String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.BasicHttpRequests: * put(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.BasicHttpRequests: * put(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.BasicHttpRequests: * trace(HttpHost,String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.BasicHttpRequests: * trace(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.BasicHttpRequests: * trace(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.ConfigurableHttpRequest: * <init>(String,HttpHost,String)","subtypes":true,"arg":"Argument[1]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.ConfigurableHttpRequest: * <init>(String,URI)","subtypes":true,"arg":"Argument[1]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleHttpRequest: * <init>(Method,HttpHost,String)","subtypes":true,"arg":"Argument[1]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleHttpRequest: * <init>(Method,URI)","subtypes":true,"arg":"Argument[1]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleHttpRequest: * <init>(String,HttpHost,String)","subtypes":true,"arg":"Argument[1]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleHttpRequest: * <init>(String,URI)","subtypes":true,"arg":"Argument[1]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleHttpRequest: * create(Method,HttpHost,String)","subtypes":true,"arg":"Argument[1]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleHttpRequest: * create(Method,URI)","subtypes":true,"arg":"Argument[1]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleHttpRequest: * create(String,String)","subtypes":true,"arg":"Argument[1]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleHttpRequest: * create(String,URI)","subtypes":true,"arg":"Argument[1]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleHttpRequests: * create(Method,HttpHost,String)","subtypes":true,"arg":"Argument[1]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleHttpRequests: * create(Method,String)","subtypes":true,"arg":"Argument[1]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleHttpRequests: * create(Method,URI)","subtypes":true,"arg":"Argument[1]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleHttpRequests: * create(String,String)","subtypes":true,"arg":"Argument[1]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleHttpRequests: * create(String,URI)","subtypes":true,"arg":"Argument[1]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleHttpRequests: * delete(HttpHost,String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleHttpRequests: * delete(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleHttpRequests: * delete(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleHttpRequests: * get(HttpHost,String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleHttpRequests: * get(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleHttpRequests: * get(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleHttpRequests: * head(HttpHost,String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleHttpRequests: * head(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleHttpRequests: * head(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleHttpRequests: * options(HttpHost,String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleHttpRequests: * options(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleHttpRequests: * options(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleHttpRequests: * patch(HttpHost,String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleHttpRequests: * patch(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleHttpRequests: * patch(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleHttpRequests: * post(HttpHost,String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleHttpRequests: * post(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleHttpRequests: * post(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleHttpRequests: * put(HttpHost,String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleHttpRequests: * put(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleHttpRequests: * put(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleHttpRequests: * trace(HttpHost,String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleHttpRequests: * trace(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleHttpRequests: * trace(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleRequestBuilder: * delete(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleRequestBuilder: * delete(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleRequestBuilder: * get(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleRequestBuilder: * get(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleRequestBuilder: * head(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleRequestBuilder: * head(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleRequestBuilder: * options(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleRequestBuilder: * options(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleRequestBuilder: * patch(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleRequestBuilder: * patch(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleRequestBuilder: * post(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleRequestBuilder: * post(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleRequestBuilder: * put(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleRequestBuilder: * put(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleRequestBuilder: * trace(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.async.methods.SimpleRequestBuilder: * trace(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.classic.methods.ClassicHttpRequests: * create(Method,String)","subtypes":true,"arg":"Argument[1]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.classic.methods.ClassicHttpRequests: * create(Method,URI)","subtypes":true,"arg":"Argument[1]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.classic.methods.ClassicHttpRequests: * create(String,String)","subtypes":true,"arg":"Argument[1]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.classic.methods.ClassicHttpRequests: * create(String,URI)","subtypes":true,"arg":"Argument[1]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.classic.methods.ClassicHttpRequests: * delete(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.classic.methods.ClassicHttpRequests: * delete(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.classic.methods.ClassicHttpRequests: * get(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.classic.methods.ClassicHttpRequests: * get(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.classic.methods.ClassicHttpRequests: * head(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.classic.methods.ClassicHttpRequests: * head(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.classic.methods.ClassicHttpRequests: * options(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.classic.methods.ClassicHttpRequests: * options(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.classic.methods.ClassicHttpRequests: * patch(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.classic.methods.ClassicHttpRequests: * patch(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.classic.methods.ClassicHttpRequests: * post(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.classic.methods.ClassicHttpRequests: * post(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.classic.methods.ClassicHttpRequests: * put(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.classic.methods.ClassicHttpRequests: * put(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.classic.methods.ClassicHttpRequests: * trace(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.classic.methods.ClassicHttpRequests: * trace(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.classic.methods.HttpDelete: * <init>(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.classic.methods.HttpDelete: * <init>(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.classic.methods.HttpGet: * <init>(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.classic.methods.HttpGet: * <init>(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.classic.methods.HttpHead: * <init>(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.classic.methods.HttpHead: * <init>(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.classic.methods.HttpOptions: * <init>(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.classic.methods.HttpOptions: * <init>(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.classic.methods.HttpPatch: * <init>(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.classic.methods.HttpPatch: * <init>(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.classic.methods.HttpPost: * <init>(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.classic.methods.HttpPost: * <init>(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.classic.methods.HttpPut: * <init>(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.classic.methods.HttpPut: * <init>(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.classic.methods.HttpTrace: * <init>(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.classic.methods.HttpTrace: * <init>(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.classic.methods.HttpUriRequestBase: * <init>(String,URI)","subtypes":true,"arg":"Argument[1]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.fluent.Request: * create(Method,URI)","subtypes":true,"arg":"Argument[1]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.fluent.Request: * create(String,String)","subtypes":true,"arg":"Argument[1]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.fluent.Request: * create(String,URI)","subtypes":true,"arg":"Argument[1]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.fluent.Request: * delete(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.fluent.Request: * delete(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.fluent.Request: * get(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.fluent.Request: * get(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.fluent.Request: * head(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.fluent.Request: * head(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.fluent.Request: * options(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.fluent.Request: * options(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.fluent.Request: * patch(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.fluent.Request: * patch(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.fluent.Request: * post(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.fluent.Request: * post(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.fluent.Request: * put(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.fluent.Request: * put(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.fluent.Request: * trace(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.client5.http.fluent.Request: * trace(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.benchmark.BenchmarkConfig$Builder: * setUri(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.impl.bootstrap.HttpAsyncRequester: * connect(HttpHost,Timeout)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.impl.bootstrap.HttpAsyncRequester: * connect(HttpHost,Timeout,Object,FutureCallback)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.io.support.ClassicRequestBuilder: * delete(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.io.support.ClassicRequestBuilder: * delete(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.io.support.ClassicRequestBuilder: * get(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.io.support.ClassicRequestBuilder: * get(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.io.support.ClassicRequestBuilder: * head(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.io.support.ClassicRequestBuilder: * head(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.io.support.ClassicRequestBuilder: * options(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.io.support.ClassicRequestBuilder: * options(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.io.support.ClassicRequestBuilder: * patch(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.io.support.ClassicRequestBuilder: * patch(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.io.support.ClassicRequestBuilder: * post(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.io.support.ClassicRequestBuilder: * post(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.io.support.ClassicRequestBuilder: * put(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.io.support.ClassicRequestBuilder: * put(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.io.support.ClassicRequestBuilder: * trace(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.io.support.ClassicRequestBuilder: * trace(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.message.BasicClassicHttpRequest: * <init>(Method,HttpHost,String)","subtypes":true,"arg":"Argument[1]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.message.BasicClassicHttpRequest: * <init>(Method,URI)","subtypes":true,"arg":"Argument[1]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.message.BasicClassicHttpRequest: * <init>(String,HttpHost,String)","subtypes":true,"arg":"Argument[1]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.message.BasicClassicHttpRequest: * <init>(String,URI)","subtypes":true,"arg":"Argument[1]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.message.BasicHttpRequest: * <init>(Method,HttpHost,String)","subtypes":true,"arg":"Argument[1]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.message.BasicHttpRequest: * <init>(Method,URI)","subtypes":true,"arg":"Argument[1]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.message.BasicHttpRequest: * <init>(String,HttpHost,String)","subtypes":true,"arg":"Argument[1]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.message.BasicHttpRequest: * <init>(String,URI)","subtypes":true,"arg":"Argument[1]","provenance":"hq-manual","ext":""},
  {"kind":"html-injection","signature":"org.apache.hc.core5.http.HttpEntityContainer: * setEntity(HttpEntity)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.HttpRequest: * setUri(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.HttpRequestFactory: * newHttpRequest(String,String)","subtypes":true,"arg":"Argument[1]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.HttpRequestFactory: * newHttpRequest(String,URI)","subtypes":true,"arg":"Argument[1]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.nio.support.AsyncRequestBuilder: * delete(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.nio.support.AsyncRequestBuilder: * delete(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.nio.support.AsyncRequestBuilder: * get(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.nio.support.AsyncRequestBuilder: * get(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.nio.support.AsyncRequestBuilder: * head(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.nio.support.AsyncRequestBuilder: * head(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.nio.support.AsyncRequestBuilder: * options(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.nio.support.AsyncRequestBuilder: * options(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.nio.support.AsyncRequestBuilder: * patch(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.nio.support.AsyncRequestBuilder: * patch(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.nio.support.AsyncRequestBuilder: * post(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.nio.support.AsyncRequestBuilder: * post(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.nio.support.AsyncRequestBuilder: * put(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.nio.support.AsyncRequestBuilder: * put(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.nio.support.AsyncRequestBuilder: * trace(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.nio.support.AsyncRequestBuilder: * trace(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.nio.support.BasicRequestProducer: * <init>(Method,HttpHost,String)","subtypes":true,"arg":"Argument[1]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.nio.support.BasicRequestProducer: * <init>(Method,HttpHost,String,AsyncEntityProducer)","subtypes":true,"arg":"Argument[1]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.nio.support.BasicRequestProducer: * <init>(Method,URI)","subtypes":true,"arg":"Argument[1]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.nio.support.BasicRequestProducer: * <init>(Method,URI,AsyncEntityProducer)","subtypes":true,"arg":"Argument[1]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.nio.support.BasicRequestProducer: * <init>(String,HttpHost,String)","subtypes":true,"arg":"Argument[1]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.nio.support.BasicRequestProducer: * <init>(String,HttpHost,String,AsyncEntityProducer)","subtypes":true,"arg":"Argument[1]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.nio.support.BasicRequestProducer: * <init>(String,URI)","subtypes":true,"arg":"Argument[1]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.nio.support.BasicRequestProducer: * <init>(String,URI,AsyncEntityProducer)","subtypes":true,"arg":"Argument[1]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.support.AbstractRequestBuilder: * setHttpHost(HttpHost)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.support.AbstractRequestBuilder: * setUri(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.support.AbstractRequestBuilder: * setUri(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.support.BasicRequestBuilder: * delete(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.support.BasicRequestBuilder: * delete(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.support.BasicRequestBuilder: * get(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.support.BasicRequestBuilder: * get(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.support.BasicRequestBuilder: * head(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.support.BasicRequestBuilder: * head(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.support.BasicRequestBuilder: * options(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.support.BasicRequestBuilder: * options(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.support.BasicRequestBuilder: * patch(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.support.BasicRequestBuilder: * patch(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.support.BasicRequestBuilder: * post(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.support.BasicRequestBuilder: * post(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.support.BasicRequestBuilder: * put(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.support.BasicRequestBuilder: * put(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.support.BasicRequestBuilder: * trace(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.hc.core5.http.support.BasicRequestBuilder: * trace(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.http.client.fluent.Request: * Delete(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.http.client.fluent.Request: * Delete(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.http.client.fluent.Request: * Get(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.http.client.fluent.Request: * Get(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.http.client.fluent.Request: * Head(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.http.client.fluent.Request: * Head(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.http.client.fluent.Request: * Options(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.http.client.fluent.Request: * Options(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.http.client.fluent.Request: * Patch(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.http.client.fluent.Request: * Patch(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.http.client.fluent.Request: * Post(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.http.client.fluent.Request: * Post(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.http.client.fluent.Request: * Put(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.http.client.fluent.Request: * Put(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.http.client.fluent.Request: * Trace(String)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.http.client.fluent.Request: * Trace(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.http.client.methods.HttpDelete: * <init>(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.http.client.methods.HttpGet: * <init>(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.http.client.methods.HttpGet: * setURI(URI)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.http.client.methods.HttpHead: * <init>(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.http.client.methods.HttpOptions: * <init>(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.http.client.methods.HttpPatch: * <init>(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.http.client.methods.HttpPost: * <init>(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.http.client.methods.HttpPut: * <init>(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.http.client.methods.HttpRequestBase: * setURI(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.http.client.methods.HttpRequestWrapper: * setURI(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.http.client.methods.HttpTrace: * <init>(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.http.client.methods.RequestBuilder: * delete(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.http.client.methods.RequestBuilder: * get(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.http.client.methods.RequestBuilder: * head(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.http.client.methods.RequestBuilder: * options(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.http.client.methods.RequestBuilder: * patch(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.http.client.methods.RequestBuilder: * post(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.http.client.methods.RequestBuilder: * put(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.http.client.methods.RequestBuilder: * setUri(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.http.client.methods.RequestBuilder: * trace(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.http.client.HttpClient: * execute(HttpUriRequest,HttpContext)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.http.client.HttpClient: * execute(HttpUriRequest,ResponseHandler,HttpContext)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.http.client.HttpClient: * execute(HttpUriRequest)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.http.impl.client.RequestWrapper: * setURI(URI)","subtypes":true,"arg":"Argument[0]","provenance":"hq-manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.http.message.BasicHttpEntityEnclosingRequest: * <init>(RequestLine)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.http.message.BasicHttpEntityEnclosingRequest: * <init>(String,String)","subtypes":false,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.http.message.BasicHttpEntityEnclosingRequest: * <init>(String,String,ProtocolVersion)","subtypes":false,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.http.message.BasicHttpRequest: * <init>(RequestLine)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.http.message.BasicHttpRequest: * <init>(String,String)","subtypes":false,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.http.message.BasicHttpRequest: * <init>(String,String,ProtocolVersion)","subtypes":false,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.apache.http.HttpRequestFactory: * newHttpRequest(String,String)","subtypes":true,"arg":"Argument[1]","provenance":"hq-manual","ext":""},
  {"kind":"html-injection","signature":"org.apache.http.HttpResponse: * setEntity(HttpEntity)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"html-injection","signature":"org.apache.http.util.EntityUtils: * updateEntity(HttpResponse,HttpEntity)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"template-injection","signature":"org.apache.velocity.app.Velocity: * evaluate(**)","subtypes":true,"arg":"Argument[3]","provenance":"manual","ext":""},
  {"kind":"template-injection","signature":"org.apache.velocity.app.Velocity: * mergeTemplate(**)","subtypes":true,"arg":"Argument[2]","provenance":"manual","ext":""},
  {"kind":"template-injection","signature":"org.apache.velocity.app.VelocityEngine: * evaluate(**)","subtypes":true,"arg":"Argument[3]","provenance":"manual","ext":""},
  {"kind":"template-injection","signature":"org.apache.velocity.app.VelocityEngine: * mergeTemplate(**)","subtypes":true,"arg":"Argument[2]","provenance":"manual","ext":""},
  {"kind":"template-injection","signature":"org.apache.velocity.runtime.RuntimeServices: * evaluate(**)","subtypes":true,"arg":"Argument[3]","provenance":"manual","ext":""},
  {"kind":"template-injection","signature":"org.apache.velocity.runtime.RuntimeServices: * parse(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"template-injection","signature":"org.apache.velocity.runtime.RuntimeSingleton: * parse(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"template-injection","signature":"org.apache.velocity.runtime.resource.util.StringResourceRepository: * putStringResource(**)","subtypes":true,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.codehaus.cargo.container.installer.ZipURLInstaller: * <init>(URL,String,String)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"groovy-injection","signature":"org.codehaus.groovy.control.CompilationUnit: * compile(**)","subtypes":false,"arg":"Argument[this]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.eclipse.jetty.client.HttpClient: * newRequest(String)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"url-redirection","signature":"org.geogebra.web.full.main.FileManager: * open(String,String)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"request-forgery","signature":"org.influxdb.InfluxDBFactory: * connect(String,String,String,Builder)","subtypes":false,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"request-forgery","signature":"org.jdbi.v3.core.Jdbi: * create(String)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.jdbi.v3.core.Jdbi: * create(String,Properties)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.jdbi.v3.core.Jdbi: * create(String,String,String)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.jdbi.v3.core.Jdbi: * open(String)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.jdbi.v3.core.Jdbi: * open(String,Properties)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.jdbi.v3.core.Jdbi: * open(String,String,String)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"url-redirection","signature":"org.kohsuke.stapler.HttpResponses: * redirectTo(String)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"request-forgery","signature":"org.kohsuke.stapler.HttpResponses: * staticResource(URL)","subtypes":true,"arg":"Argument[0]","provenance":"ai-manual","ext":""},
  {"kind":"request-forgery","signature":"org.springframework.boot.jdbc.DataSourceBuilder: * url(String)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.springframework.core.io.ResourceLoader: * getResource(String)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.springframework.http.RequestEntity: * <init>(HttpMethod,URI)","subtypes":false,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.springframework.http.RequestEntity: * <init>(MultiValueMap,HttpMethod,URI)","subtypes":false,"arg":"Argument[2]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.springframework.http.RequestEntity: * <init>(Object,HttpMethod,URI)","subtypes":false,"arg":"Argument[2]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.springframework.http.RequestEntity: * <init>(Object,HttpMethod,URI,Type)","subtypes":false,"arg":"Argument[2]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.springframework.http.RequestEntity: * <init>(Object,MultiValueMap,HttpMethod,URI)","subtypes":false,"arg":"Argument[3]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.springframework.http.RequestEntity: * <init>(Object,MultiValueMap,HttpMethod,URI,Type)","subtypes":false,"arg":"Argument[3]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.springframework.http.RequestEntity: * delete(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.springframework.http.RequestEntity: * get(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.springframework.http.RequestEntity: * head(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.springframework.http.RequestEntity: * method(**)","subtypes":false,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.springframework.http.RequestEntity: * options(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.springframework.http.RequestEntity: * patch(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.springframework.http.RequestEntity: * post(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.springframework.http.RequestEntity: * put(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.springframework.jdbc.datasource.AbstractDriverBasedDataSource: * setUrl(String)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.springframework.jdbc.datasource.DriverManagerDataSource: * <init>(String)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.springframework.jdbc.datasource.DriverManagerDataSource: * <init>(String,Properties)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.springframework.jdbc.datasource.DriverManagerDataSource: * <init>(String,String,String)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  
  {"kind":"ldap-injection","signature":"org.springframework.ldap.core.LdapTemplate: * authenticate(LdapQuery,String)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"org.springframework.ldap.core.LdapTemplate: * authenticate(Name,String,String)","subtypes":false,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"org.springframework.ldap.core.LdapTemplate: * authenticate(Name,String,String,AuthenticatedLdapEntryContextCallback)","subtypes":false,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"org.springframework.ldap.core.LdapTemplate: * authenticate(Name,String,String,AuthenticatedLdapEntryContextCallback,AuthenticationErrorCallback)","subtypes":false,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"org.springframework.ldap.core.LdapTemplate: * authenticate(Name,String,String,AuthenticationErrorCallback)","subtypes":false,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"org.springframework.ldap.core.LdapTemplate: * authenticate(String,String,String)","subtypes":false,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"org.springframework.ldap.core.LdapTemplate: * authenticate(String,String,String,AuthenticatedLdapEntryContextCallback)","subtypes":false,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"org.springframework.ldap.core.LdapTemplate: * authenticate(String,String,String,AuthenticatedLdapEntryContextCallback,AuthenticationErrorCallback)","subtypes":false,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"org.springframework.ldap.core.LdapTemplate: * authenticate(String,String,String,AuthenticationErrorCallback)","subtypes":false,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"org.springframework.ldap.core.LdapTemplate: * find(**)","subtypes":false,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"org.springframework.ldap.core.LdapTemplate: * findOne(**)","subtypes":false,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"org.springframework.ldap.core.LdapTemplate: * search(**)","subtypes":false,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"org.springframework.ldap.core.LdapTemplate: * searchForContext(**)","subtypes":false,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"ldap-injection","signature":"org.springframework.ldap.core.LdapTemplate: * searchForObject(**)","subtypes":false,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  
  {"kind":"request-forgery","signature":"org.springframework.web.client.RestTemplate: * delete(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.springframework.web.client.RestTemplate: * doExecute(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.springframework.web.client.RestTemplate: * exchange(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.springframework.web.client.RestTemplate: * execute(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.springframework.web.client.RestTemplate: * getForEntity(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.springframework.web.client.RestTemplate: * getForObject(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.springframework.web.client.RestTemplate: * headForHeaders(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.springframework.web.client.RestTemplate: * optionsForAllow(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.springframework.web.client.RestTemplate: * patchForObject(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.springframework.web.client.RestTemplate: * postForEntity(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.springframework.web.client.RestTemplate: * postForLocation(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.springframework.web.client.RestTemplate: * postForObject(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.springframework.web.client.RestTemplate: * put(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.springframework.web.reactive.function.client.WebClient: * create(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"org.springframework.web.reactive.function.client.WebClient$Builder: * baseUrl(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"template-injection","signature":"org.thymeleaf.ITemplateEngine: * process(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"template-injection","signature":"org.thymeleaf.ITemplateEngine: * processThrottled(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"play.libs.ws.WSClient: * url(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"play.libs.ws.StandaloneWSClient: * url(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"request-forgery","signature":"retrofit2.Retrofit$Builder: * baseUrl(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},

  {"kind":"deserialization","signature":"com.alibaba.fastjson.JSON: * parse(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":"@active:condition:version:risk-fastjson"},
  {"kind":"deserialization","signature":"com.alibaba.fastjson.JSON: * parseObject(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":"@active:condition:version:risk-fastjson"},
  {"kind":"deserialization","signature":"java.beans.XMLDecoder: * readObject(**)","subtypes":true,"arg":"Argument[-1]","provenance":"manual","ext":""},
  {"kind":"deserialization","signature":"com.thoughtworks.xstream.XStream: * fromXML(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"deserialization","signature":"com.thoughtworks.xstream.XStream: * unmarshal(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"deserialization","signature":"com.esotericsoftware.kryo.Kryo: * readClassAndObject(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"deserialization","signature":"com.esotericsoftware.kryo.Kryo: * readObject(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"deserialization","signature":"com.esotericsoftware.kryo.Kryo: * readObjectOrNull(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"deserialization","signature":"com.esotericsoftware.kryo5.Kryo: * readClassAndObject(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"deserialization","signature":"com.esotericsoftware.kryo5.Kryo: * readObject(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"deserialization","signature":"com.esotericsoftware.kryo5.Kryo: * readObjectOrNull(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"deserialization","signature":"org.apache.commons.lang.SerializationUtils: * deserialize(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"deserialization","signature":"org.apache.commons.lang3.SerializationUtils: * deserialize(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"deserialization","signature":"org.yaml.snakeyaml.Yaml: * compose(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"deserialization","signature":"org.yaml.snakeyaml.Yaml: * composeAll(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"deserialization","signature":"org.yaml.snakeyaml.Yaml: * load(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"deserialization","signature":"org.yaml.snakeyaml.Yaml: * loadAll(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"deserialization","signature":"org.yaml.snakeyaml.Yaml: * loadAs(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"deserialization","signature":"org.yaml.snakeyaml.Yaml: * parse(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"deserialization","signature":"org.ho.yaml.Yaml: * load(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"deserialization","signature":"org.ho.yaml.Yaml: * loadType(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"deserialization","signature":"org.ho.yaml.Yaml: * loadStream(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"deserialization","signature":"org.ho.yaml.Yaml: * loadStreamOfType(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"deserialization","signature":"org.ho.yaml.YamlConfig: * load(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"deserialization","signature":"org.ho.yaml.YamlConfig: * loadType(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"deserialization","signature":"org.ho.yaml.YamlConfig: * loadStream(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"deserialization","signature":"org.ho.yaml.YamlConfig: * loadStreamOfType(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"deserialization","signature":"com.cedarsoftware.util.io.JsonReader: * jsonToJava(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"deserialization","signature":"com.cedarsoftware.util.io.JsonReader: * readObject(**)","subtypes":true,"arg":"Argument[-1]","provenance":"manual","ext":""},
  {"kind":"deserialization","signature":"com.esotericsoftware.yamlbeans.YamlReader: * read(**)","subtypes":true,"arg":"Argument[-1]","provenance":"manual","ext":""},
  {"kind":"deserialization","signature":"com.caucho.hessian.io.AbstractHessianInput: * readObject(**)","subtypes":true,"arg":"Argument[-1]","provenance":"manual","ext":""},
  {"kind":"deserialization","signature":"com.caucho.hessian.io.AbstractHessianInput: * Hessian2StreamingInput(**)","subtypes":true,"arg":"Argument[-1]","provenance":"manual","ext":""},
  {"kind":"deserialization","signature":"com.alibaba.com.caucho.hessian.io.AbstractHessianInput: * readObject(**)","subtypes":true,"arg":"Argument[-1]","provenance":"manual","ext":""},
  {"kind":"deserialization","signature":"com.alibaba.com.caucho.hessian.io.AbstractHessianInput: * Hessian2StreamingInput(**)","subtypes":true,"arg":"Argument[-1]","provenance":"manual","ext":""},
  {"kind":"deserialization","signature":"org.exolab.castor.xml.Unmarshaller: * unmarshal(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"deserialization","signature":"com.caucho.burlap.io.BurlapInput: * readObject(**)","subtypes":true,"arg":"Argument[-1]","provenance":"manual","ext":""},
  {"kind":"deserialization","signature":"com.fasterxml.jackson.databind.ObjectMapper: * readValue(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"deserialization","signature":"com.fasterxml.jackson.databind.ObjectMapper: * readValues(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"deserialization","signature":"com.fasterxml.jackson.databind.ObjectMapper: * treeToValue(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"deserialization","signature":"org.jabsorb.JSONSerializer: * unmarshall(**)","subtypes":true,"arg":"Argument[2]","provenance":"manual","ext":""},
  {"kind":"deserialization","signature":"org.jabsorb.JSONSerializer: * fromJSON(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"deserialization","signature":"jodd.json.JsonParser: * parse(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"deserialization","signature":"jodd.json.JsonParser: * parseUrl(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"deserialization","signature":"flexjson.JSONDeserializer: * deserialize(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},

  {"kind":"xpath-injection","signature":"javax.xml.xpath.XPath: * compile(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"xpath-injection","signature":"javax.xml.xpath.XPath: * evaluate(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"xpath-injection","signature":"javax.xml.xpath.XPath: * evaluateExpression(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"xpath-injection","signature":"org.dom4j.DocumentFactory: * createPattern(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"xpath-injection","signature":"org.dom4j.DocumentFactory: * createXPath(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"xpath-injection","signature":"org.dom4j.DocumentFactory: * createXPathFilter(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"xpath-injection","signature":"org.dom4j.DocumentHelper: * createPattern(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"xpath-injection","signature":"org.dom4j.DocumentHelper: * createXPath(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"xpath-injection","signature":"org.dom4j.DocumentHelper: * createXPathFilter(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"xpath-injection","signature":"org.dom4j.DocumentHelper: * selectNodes(**)","subtypes":false,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"xpath-injection","signature":"org.dom4j.DocumentHelper: * sort(**)","subtypes":false,"arg":"Argument[1]","provenance":"manual","ext":""},
  {"kind":"xpath-injection","signature":"org.dom4j.Node: * createXPath(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"xpath-injection","signature":"org.dom4j.Node: * matches(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"xpath-injection","signature":"org.dom4j.Node: * numberValueOf(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"xpath-injection","signature":"org.dom4j.Node: * selectNodes(**)","subtypes":true,"arg":"Argument[0..1]","provenance":"manual","ext":""},
  {"kind":"xpath-injection","signature":"org.dom4j.Node: * selectObject(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"xpath-injection","signature":"org.dom4j.Node: * selectSingleNode(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"xpath-injection","signature":"org.dom4j.Node: * valueOf(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"xpath-injection","signature":"org.dom4j.tree.AbstractNode: * createPattern(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"xpath-injection","signature":"org.dom4j.tree.AbstractNode: * createXPathFilter(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"xpath-injection","signature":"org.dom4j.util.ProxyDocumentFactory: * createPattern(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"xpath-injection","signature":"org.dom4j.util.ProxyDocumentFactory: * createXPath(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""},
  {"kind":"xpath-injection","signature":"org.dom4j.util.ProxyDocumentFactory: * createXPathFilter(**)","subtypes":true,"arg":"Argument[0]","provenance":"manual","ext":""}
]